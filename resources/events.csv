114;Towards Agile Scalability Engineering;5/24/2018 12:15 PM;5/24/2018 12:30 PM;Research;;Scalability engineering is currently not well integrated into agile de- velopment techniques. By scalability we mean the ability of a system to handle increasing workload. This paper extends agile development techniques so that scalability can also be handled. Using action research, we have conducted three pilots in three Norwegian software organizations. These three pilots have com- pletely different architectures and also operate in different markets, yet have in common scalability challenges. As a result, we describe common challenges for scalability engineering using agile development techniques and we propose the ScrumScale Method which includes scalability engineering in an incremental and iterative development process.;"Geir Kjetil Hanssen; Gunnar Brataas; Georg Ræder";B002
117;Developers' initial perceptions on TDD practice: A thematic analysis considering distinct domains and languages;5/22/2018 3:00 PM;5/22/2018 3:30 PM;Research;;"Test-Driven Development (TDD) is one of the most popular agile practices among software developers. To investigate the software developers’ initial perceptions when applying TDD, we have performed an exploratory study. This study was carried out with participants who had about ten years of professional experience (on average), the majority of whom with no experience using TDD. The study is in the context of an agile project course at the postgraduate level of a research institute. Participants individually developed medium size projects addressed to different domains and using different programming languages. Through a structured questionnaire with open and semi-open questions, we collected information on TDD effects such as the perceived benefits, encountered difficulties, and developer’s opinion about the quality improvement of the software. Afterwards, we conducted a thematic analysis of the qualitative data. Most participants noticed improvements in code quality, but few have a more comprehensive view of the effects of TDD on software design. Our findings suggest that after overcoming the initial difficulties to understand where to start, and after knowing how to create a test for a feature that does not yet exist; participants gain greater confidence to implement new features and make changes due to broad test coverage.";"Tiago Silva; Herez Moise Kattan; Eduardo Guerra; Joelma Choma";B003
119;Teamwork quality and team performance: Exploring differences between small and large agile projects;5/24/2018 12:00 PM;5/24/2018 12:15 PM;Research;;Agile principles were originally developed for small projects but are now widely used in larger projects with hundreds of developers. Teamwork quality is essential in any development work, but how does teamwork quality differ in small and large agile projects? We report from an explorative survey with 64 agile teams and 320 team members and team leaders, from 31 teams in small projects and 33 teams in large projects. For small projects, teamwork quality was considered by both team members and team leaders to primarily affect product quality. For large projects, the effect of teamwork quality on product quality was positive when it was rated by team members but was negative when rated by team leaders. At a finer granularity, the six dimensions of teamwork quality that we investigated affected team performance differently in small and large projects. These findings question to what extent findings from previous studies on teamwork in agile development in small projects apply to large projects.;"Gunnar Bergersen; Yngve Lindsjørn; Dag Sjøberg; Torgeir Dingsøyr";B002
120;Myths and Facts about Static Application Security Testing Tools: An Action Research at Telenor Digital;5/23/2018 12:00 PM;5/23/2018 12:30 PM;Research;;It is claimed that integrating agile and security in practice is challenging. There is the notion that security is a heavy process, requires expertise, and consumes developers’ time. These contrast with the agile vision. Regardless of these challenges, it is important for organizations to address security within their agile processes since critical assets must be protected against attacks. One way is to integrate tools that could help to identify security weaknesses during implementation and suggest methods to refactor them. We used quantitative and qualitative approaches to investigate the efficiency of the tools and what they mean to the ac- tual users (i.e. developers) at Telenor Digital. Our findings, although not suprising, show that several barriers exist both in terms of tool’s performance and developers’ perceptions. We suggest practical ways for improvement.;"Daniela S Cruzes; Tosin Daniel Oyetoyan; Bisera Milosheska; Mari Grini";B217
122;Challenges and Strategies for Undertaking Continuous Experimentation to Embedded Systems: Industry and Research Perspectives;5/24/2018 12:00 PM;5/24/2018 12:30 PM;Research;;"Abstract. Context: Continuous experimentation is frequently used in web-facing companies and it is starting to gain the attention of embedded systems companies. However, embedded systems companies have different challenges and requirements to run experiments in their systems. Objective: This paper explores the challenges during the adoption of continuous experimentation in embedded systems from both industry practice and academic research. It presents strategies, guidelines, and solutions to overcome each of the identified challenges. Method: This research was conducted in two parts. The first part is a literature review with the aim to analyze the challenges in adopting continuous experimentation from the research perspective. The second part is a multiple case study based on interviews and workshop sessions with five companies to understand the challenges from the industry perspective and how they are working to overcome them. Results: This study found a set of twelve challenges divided into three areas; technical, business, and organizational challenges and strategies grouped into three categories, architecture, data handling and development processes. Conclusions: The set of identified challenges are presented with a set of strategies, guidelines, and solutions. To the knowledge of the authors, this paper is the first to provide an extensive list of challenges and strategies for continuous experimentation in embedded systems. Moreover, this research points out open challenges and the need for new tools and novel solutions for the further development of experimentation in embedded systems.";"David Issa Mattos; Jan Bosch; Helena Holmström Olsson";B001
123;Improving Mockup-based Requirement Specification with End-User Annotations;5/23/2018 3:00 PM;5/23/2018 3:30 PM;Research;;Agile approaches, one of the key methodologies used in today’s software projects, often rely on user interface mockups for capturing the goals that the system must satisfy. Mockups, as any other requirement artifact, may suffer from ambiguity and contradiction issues when several points of view are surveyed / elicited by different analysts. This article introduces a novel approach that enhances mockups with friendly end-user annotations that helps formalizing the requirements and reducing or identifying conflicts. We present an evaluation of the approach in order to measure how the use of annotations improves requirements quality.;"Mario Matias Urbieta; Nahime Torres;  Gustavo Rossi; Francisco José Dominguez-Mayo; José Matías Rivero";B001
124;Technical and Organizational Agile Practices: A Latin-American Survey;5/22/2018 5:30 PM;5/22/2018 6:00 PM;Research;;Background: Agile Software Development is widely used nowadays and to measure its real usage we need to analyze how its practices are used. These practices have been categorized by several authors and some practitioners have suggested that technical practices have a lower usage level than organizational practices. Objective: In this study we aim to understand the actual usage of tech- nical and organizational agile practices in the Latin-American Agile community. Method: We conducted a three-stage survey in conferences of the Latin-Ameri- can Agile Community. Results: Organizational practices are much more used than technical ones. The number of practices used is a direct function of organi- zation experience using agile. The difference between technical and organiza- tional practices reduces with the experience of the organization using agile. Team size and project duration seem to have no effect in number of practices used.;"Nicolas Paez; Diego Fontdevila; Alejandro Oliveros; Fernando Gainey";B003
126;Do Agile Methods Work for Large Software Projects?;5/24/2018 3:00 PM;5/24/2018 3:30 PM;Research;;Is it true that agile methods do not scale well and are mainly useful for smaller software projects? Or is it rather the case that it is particularly in the context of larger, typically more complex software projects that the use of agile methods is likely to make the difference between success and failure? To find out more about this, we conducted a questionnaire-based survey collecting information about 122 Norwegian software projects. Project success was measured as the combined performance of the project regarding delivered client benefits, cost control, and time control. We found that that projects using agile methods performed on average much better than those using non-agile methods for medium and large software projects, but not so much for smaller projects. This result gives support for the claim that agile methods are more rather than less successful compared to traditional methods when project size increases. There may consequently be more reasons to be concerned about how non-agile, rather than how agile methods, scale.;Magne Jørgensen;B217
130;Combining STPA and BDD for Safety Analysis and Verification in Agile Development: A Controlled Experiment;5/23/2018 5:00 PM;5/23/2018 5:30 PM;Research;;Context: Agile development is in widespread use, even in safety-critical domains. Motivation: However, there is a lack of an appropriate safety analysis and verification method in agile development. Objective: In this paper, we investigate the use of Behavior Driven Development (BDD) instead of standard User Acceptance Testing (UAT) for safety verification with System-Theoretic Process Analysis (STPA) for safety analysis in agile development. Method: We evaluate the effect of this combination in a controlled experiment with 44 students in terms of productivity, test thoroughness, fault detection effectiveness and communication effectiveness. Results: The results show that BDD is more effective for safety verification regarding the impact on communication effectiveness than standard UAT, whereas productivity, test thoroughness and fault detection effectiveness show no statistically significant difference in our controlled experiment. Conclusion: The combination of BDD and STPA seems promising, but the impact on communication needs more research.<br><br><strong>Authors: Stefan Wagner, Yang Wang</strong>;Yang Wang;B001
131;ICOs overview: should investors choose an ICO developed with the Lean Startup methodology?;5/24/2018 5:30 PM;5/24/2018 6:00 PM;Research;;An Initial Coin Offering (ICO) is an innovative way to raise funds and launch a startup and even as an opportunity to take part in a project, in a DAO (Decentralized Autonomous Organization). The use of ICO is a global phenomenon that involves many nations and several business categories: ICOs collected over 5.2 billion dollars only in 2017. The success of an ICO is based on the credibility and innovativeness of project proposals. This fund-raising tool contains however some critical issues such as the use of token that must have an intrinsic value and does not generate direct liquidity and the role of investors in the management of startup. We analyzed if the Lean Startup methodology is helpful to face this critical aspects and we examined at some ICOs in which the proposing team states explicitly that a lean startup approach is used.;"Andrea Pinna; Simona Ibba; Gavina Baralla; Michele Marchesi";B001
133;Interface Problems of Agile in a Non-Agile Environment;5/24/2018 5:30 PM;5/24/2018 5:45 PM;Research;;Context: Agile is an accepted and widespread software development approach. But there are also still many projects that are working with traditional software development methods. In addition, non-technical business units like human resources or marketing continue working in the established traditional ways. Thus, problems arise at the interface of agile and traditional approach-es due to the fundamental differences of those paradigms. Objective: To prevent potential problems, one must be aware of the existing interfaces and common pitfalls. Method: Based on a literature search, own experiences and interview results, we identified existing interfaces as well as collected and grouped problems. Results: We present the identified problems and propose a matrix that facilitates classification of interface problems. Conclusion: This matrix can be used to identify and classify more problems with the aim of providing an experience base that helps understanding and preventing problems at the interface between agile and traditional.;"Philipp Diebold; Sven Theobald";B002
134;Supporting Large-Scale Agile Development with Domain-driven Design;5/23/2018 5:30 PM;5/23/2018 6:00 PM;Research;;An increasing number of large organizations are adopting agile and lean methods at larger scale for building complex software systems. One major critique of agile development and in particular of large-scale agile development is the neglect of proper architecting assistance in such development efforts. On the one hand, emergent architecture design may require excessive redesign efforts in large systems, while on the other hand, big upfront architecture delays the starting point of implementation. Domain-driven Design (DDD) addresses this problem by providing means for evolving the architecture of complex systems in an agile way. We describe how DDD can support large-scale agile development based on a conducted case study in a large insurance company with three agile teams. Furthermore, we present a framework for large-scale agile development that is largely based on Large-Scale Scrum and incorporates strategic and tactical DDD.;"Matheus Hauder; Martin Kleehaus; Christina Schimpfle;  Florian Matthes; Ömer Uludağ";B001
135;Software tester, we want to hire you! An analysis of skill demands with a focus on soft skills;5/24/2018 5:30 PM;5/24/2018 6:00 PM;Research;;"One important discussion in the software development field is related to the skills that people must have in order to build successful software products. This debate is generated on one hand by a large number of failures and delays of software projects. On the other hand, the debate is triggered by the need to build even better-quality software in a rapidly changing world. We will examine to which extent soft skills are relevant when hiring software testers and if there are any specific skills required for agile testers. We analyzed 400 job advertisements for testers from 33 countries, out of which 64% ask for soft skills. Of the advertisements asking for soft skills, there is, on average, a request for 4.7 soft skills, 11.3 testing skills and 5.3 technical skills. Only 30% of the companies ask explicitly for agile testers. However, our analysis shows no notable differences in skill demands for agile testers and the rest.&nbsp;Software companies want to hire testers who are able to communicate well and have analytical and problem-solving skills. There is a significant increase in the need for openness and adaptability, independent-working and team-playing since 2012. In addition, there are new categories of soft skills identified, such as having work ethics, customer-focus and the ability to work under pressure.";"Viktoria Stray; Raluca Madalina Florea";B003
138;Learning in the Large - An Exploratory Study of Retrospectives in Large-Scale Agile Development;5/23/2018 5:15 PM;5/23/2018 5:30 PM;Research;;Many see retrospectives as the most important practice of agile software development. Previous studies of retrospectives have focused on process and outcome at team level. In this article, we study how a large-scale agile development project uses retrospectives through an analysis of retrospective reports identifying a total of 109 issues and 36 action items as a part of a longitudinal case study. We find that most of the issues identified relate to team-level learning and improvement, and discuss these findings in relation to current advice in a framework for large-scale agile development.;"Marius Mikaelsen; Anniken Solem; Kathrine Vestues; Torgeir Dingsøyr";B002
142;Inter-team Coordination in Large-Scale Agile Development: A Case Study of Three Enabling Mechanisms;5/22/2018 5:30 PM;5/22/2018 6:00 PM;Research;;Agile methods are increasingly used in large development projects, with multiple development teams. A central question is then what is needed to coordinate feature teams efficiently. This study examines three mechanisms for coordination, shared mental models, communication and trust in a large-scale development project with 12 feature teams running over a four-year period. We analyse the findings in relation to suggested frameworks for large-scale agile development and one theory on coordination, and provide new recommendations for practice and theory.;" Christoph Johann Stettina; Julia Wijnmaalen; Finn Olav Bjørnson; Torgeir Dingsøyr";B001
144;Agile Software Development – Adoption & Maturity: An Activity Theory Perspective;5/23/2018 12:00 PM;5/23/2018 12:30 PM;Research;;This paper suggests that the activity theory concept is a useful lens for organisations that seek to improve their levels of agile software development maturity. Attention is focused around the interactions and approaches adopted by individuals rather than the usual process and technique. This paper reports on the initial stages of research that consisted of a series of interviews and a survey. The results indicate that activity theory contradictions are wide spread and vary in the levels at which they occur. They also correlate to many of the factors that influence agile maturity that have already been identified within the literature. This study contributes to research by integrating elements of learning theory and agile software development.;Pritam Chita;B001
151;Enterprise agility: Why is transformation so hard?;5/24/2018 3:00 PM;5/24/2018 3:30 PM;Research;;Enterprise agility requires capabilities that help organisations to transform, sense and seize new business opportunities more quickly than competitors. However, acquiring those capabilities, such as transformation to continuous delivery and scaling agile, are challenging in many organisations. This paper addresses definitions of enterprise agility involving business management and cultural lenses for analysing large-scale transformation. The case organisation, in the higher education domain, leverages collaborative discovery sprints and an experimental programme to enable a bottom-up approach to transformation. Meanwhile prevalence of top-down bureaucracy and organisational silos are often contradictory to agile principles and values. The case study results identify transformation challenges based on observations from a five-months research period. Initial findings indicate that increased focus on culture and synchronised leadership activities could enhance the likelihood of a successful transformation.<br><br><strong>Authors: Leonor Barroca, Teemu Karvonen, Helen Sharp</strong>;Teemu Karvonen;B002
152;COSMIC User Story Standard;5/22/2018 5:00 PM;5/22/2018 5:30 PM;Research;;User Stories is a technique widely used in Agile development. It is characterized as short and high-level descriptions of required functionality, written in customer language during very early stages of requirement gathering and containing just enough information to produce the estimated implementation effort. The COSMIC method is a second generation technique for function size measurement. The requirement estimation precision in COSMIC is directly proportional to the requirement detailing level. The current user stories writing standards may lack important information for COSMIC measurement purposes. This paper introduces a new standard for writing user stories which contain more expressiveness in terms of COSMIC size estimation. We performed a survey to introduce this new user story template to the COSMIC community. The qualitative survey intended to capture COSMIC users opinion in terms of expressiveness and how valuable it is. The survey points to promising results considering the COSMIC users opinion about the new template. This study contributes to agile requirements from the COS-MIC users point of view. This new template may be a step forward in terms of user story estimation for COSMIC sizing based projects.;"Miguel Ecar;  Fabio Kepler; João Pablo S Da Silva";B002
156;Reporting in Agile Portfolio Management: Routines, Metrics and Artefacts to Maintain an Effective Oversight;5/24/2018 5:00 PM;5/24/2018 5:30 PM;Research;;In a world where changes are being higher paced than ever, businesses are required to cope with these changes to survive. Many organizations have successfully adopted agile methods to cope with these rapid changes in their projects. However, a growing number of organizations seeks to adopt agile practices on their portfolio level. A domain far less explored. In this paper we report the preliminary findings of our study on reporting practices, artifacts and metrics in agile portfolio management. Based on 14 interviews conducted in 10 large European organizations this study for the first time provides an empirical perspective on the topic.<br /><br /><strong><em>Christoph Johann Stettina, Lennard Schoemaker</em></strong>;Lennard Schoemaker;B001
166;Automated Acceptance Tests as Software Requirements: An Experiment to Compare the Applicability of Fit tables and Gherkin Language.;5/24/2018 5:00 PM;5/24/2018 5:30 PM;Research;;It is estimated that 85% of the defects in the developed software are originated from ambiguous, incomplete and wishful thinking software requirements. Natural language is often used to write software requirements specifications as well as user requirements. However, natural language specifications can be confusing and hard to understand. Some agile methodologists consider that acceptance tests are more precise and accurate sources of information about the customer’s needs than descriptions in natural language. Several studies have addressed the use of acceptance tests as software requirements specification. Therefore, none of the previous studies has performed experiments to compare the applicability of different acceptance testing techniques in order to support an organization in the selection of one technique over another. This paper addresses this problem reporting an experiment performed with undergraduate students in Computer Science. This experiment compares the applicability of two acceptance testing techniques (Fit tables and Gherkin Language) as software requirements specification. This research tries to answer three questions: (a) Which technique is the easiest to learn in order to specify acceptance test scenarios? (b) Which technique does require less effort to specify acceptance tests? (c) Which technique is the best one to communicate software requirements? The results show that there are no sufficient evidences to affirm that one technique is easier to specify test scenarios or better to communicate software requirements. Whereas, the comparison of effort in terms of time to specify acceptance testing shows that the mean time to specify test scenarios using Gherkin Language is fewer than Fit tables.;"Ernani César Dos Santos; Patrícia Vilain";B003
173;Stress in Agile Software Development: Practices and Outcomes;5/23/2018 5:00 PM;5/23/2018 5:15 PM;Research;;Stress is an important workplace issue, affecting both the health of individuals, and the health of organizations. Early advocacy for Agile Software Development suggested it might help avoid stress, with practices that emphasize a sustainable pace, and self-organizing teams. Our analysis of a 2014 survey, however, suggested that stress might still be commonplace in Agile teams, especially for those with less experience. We also noticed that newcomers to Agile emphasized technical, rather than collaborative, practices, and speculated this might explain the stress. We explored this in our analysis of a follow-up survey conducted in 2016, and report our findings in this paper. We show that there are a variety of factors involved, and that avoiding stress is associated with both collaborative and technical practices, and a range of outcomes.;" Martin Kropp; Craig Anslow; Robert Biddle;  Andreas Meier";B002
26;Lunch Break;5/22/2018 12:30 PM;5/22/2018 2:00 PM;Social;;;;#XP-PX 
27;Large Scale Agile (6th International Workshop on Large-Scale Agile Development);5/21/2018 9:00 AM;5/21/2018 12:30 PM;Workshop;;"Agile software development methods were made for small, co-located development teams, but are increasingly applied in other settings. Several large projects, with a number of teams that develop complex systems have started to use agile methods. How to apply agile methods to large projects was identified as the ""top burning research question"" by practitioners at XP2010. At XP2013 to XP2017, this workshop has addressed research challenges in large-scale agile development and identified topics such as inter-team coordination, large project organization, release planning and architecture and practices to scaling agile methods (see <a href="""" rel=""noopener noreferrer"" target=""_blank"">details</a>).<br>For 2018, we especially seek contributions which present empirical studies of emerging frameworks for large-scale agile development such as the Scaled Agile Framework or Large-Scale Scrum. We seek contributions in the form of position papers with experience reports, empirical studies, reviews of relevant literature, and papers arguing for research needs or describing planned research.<br>We ask for contributions in the form of 4-page short-papers, which will be peer-reviewed by program committee members for acceptance or rejection. Extended and revised short-papers can be included in the post-conference proceedings published by ACM.<br><br><strong>Primary organizers: &nbsp;</strong><br><ul><li>Torgeir Dingsøyr, SINTEF, Norway (Torgeir.Dingsoyr@sintef.no)</li><li>Helena Holmström Olsson, Malmö University, Sweden (helena.holmstrom.olsson@mah.se)</li><li>Nils Brede Moe, SINTEF, Norway (nilsm@sintef.no)</li></ul>";;B229
28;Lunch Break;5/25/2018 12:30 PM;5/25/2018 1:30 PM;Social;;;;#XP-PX 
29;Lunch Break;5/23/2018 12:30 PM;5/23/2018 2:00 PM;Social;;;;#XP-PX 
30;Lunch Break;5/21/2018 12:30 PM;5/21/2018 2:00 PM;Social;;;;#XP-PX 
31;Lunch Break;5/24/2018 12:30 PM;5/24/2018 2:00 PM;Social;;;;#XP-PX 
32;"Keynote by Laurie Williams on ""Continuously Deploying Security""";5/22/2018 9:00 AM;5/22/2018 10:30 AM;Keynote;;Continuous deployment is a software engineering process where incremental software changes are automatically tested and frequently deployed to production environments. With continuous deployment, the elapsed time for a change made by a developer to reach a customer can now be measured in days or even hours. To understand the emerging practices surrounding continuous deployment, three annual one-day Continuous Deployment Summits have been held at Facebook, Netflix, and Google in 2015-2017, where 16 companies have described how they used continuous deployment. This talk will discuss the practices and environment used by these companies as they strive to develop secure and privacy-preserving products while making ultra-fast changes.<br>;Laurie Williams;Auditorium
33;Keynote by Cristina Videira Lopes: On Software and Buildings;5/24/2018 9:00 AM;5/24/2018 10:30 AM;Keynote;;"Because humans need metaphors and analogies for everything that seems new, and also because the grass tends to be greener on the other side, the construction of software is often compared to the construction of physical buildings -- civil engineering and architecture, in particular, are often invoked as metaphorical reference points. This talk is a reflection on my recent experience with renovating a building in Lisbon, and my own condo inside it, and how this physical construction project relates, or not, to software development.<img src=""https://ssl.gstatic.com/ui/v1/icons/mail/images/cleardot.gif""><br>";Cristina Videira Lopes;Auditorium
34;Coffee Break;5/22/2018 10:30 AM;5/22/2018 11:00 AM;Social;;;;#XP-PX 
35;Open Space Opening;5/22/2018 11:00 AM;5/22/2018 12:30 PM;Open Space;;;Charlie Poole;XPSpaces
3501;Open Space, Makerspace, Guru Space;5/22/2018 2:00 PM;5/22/2018 6:00 PM;Open Space;;;Charlie Poole;XPSpaces
3502;Open Space, Makerspace, Guru Space;5/23/2018 11:00 AM;5/23/2018 12:30 PM;Open Space;;;Charlie Poole;XPSpaces
3503;Open Space, Makerspace, Guru Space;5/23/2018 2:00 PM;5/23/2018 6:00 PM;Open Space;;;Charlie Poole;XPSpaces
3504;Open Space, Makerspace, Guru Space;5/24/2018 11:00 AM;5/24/2018 12:30 PM;Open Space;;;Charlie Poole;XPSpaces
3505;Open Space, Makerspace, Guru Space;5/24/2018 2:00 PM;5/24/2018 6:00 PM;Open Space;;;Charlie Poole;XPSpaces
36;Coffee Break;5/22/2018 3:30 PM;5/22/2018 4:00 PM;Social;;;;#XP-PX 
37;Coffee Break;5/24/2018 10:30 AM;5/24/2018 11:00 AM;Social;;;;#XP-PX 
38;FIAREX (Fostering More Industry-Academic Research in XP);5/25/2018 2:00 PM;5/25/2018 5:30 PM;Workshop;;"While some academic disciplines have been highly successful in bringing academia and industry together to share (often sensitive) data in studies, the same is not necessarily true of the software engineering community generally speaking. As such, there is an opportunity in any area where software is written, used or studied to analyze, understand and disseminate best practice in fostering more industry-academic studies in agile topics; this is the purpose of FIAREX. The Workshop will be geared towards experience: what lessons can be learnt from current studies in terms of barriers and impediments to collaboration between industry and academia on agile topics? What are the key issues in sharing agile data between academia and industry? What is best practice in collaborative studies and, most importantly, what can be done to encourage more agile collaboration? The following is an indicative, but by no means exhaustive list of experience topics that we solicit for FIAREX:<br><ul><li>Current challenges in sharing industry data on agile practices with academia</li><li>Challenges in performing experiments/case-studies with agile data</li><li>Issues with analyzing industry data on agile</li><li>Preserving anonymity/security in agile data</li><li>Issues associated with reporting results using industrial agile data</li><li>Specific current research/initiatives in the area of industry-academic cooperation</li><li>Best practice in collaboration between industry and academia</li><li>Short surveys and analyses of industrial-academia collaborations of agile</li><li>Future directions, challenges and initiatives in collaborations (i.e., the landscape)</li></ul><br><strong>Organizers:</strong><br><ul><li>Steve Counsell, Department of Computer Science, Brunel University, London (steve.counsell@brunel.ac.uk)</li><li>Professor Tracy Hall, Department of Computer Science, Brunel University, London tracy.hall@brunel.ac.uk)</li><li>Dr Stephen Swift, Department of Computer Science, Brunel University, London</li><li>Dr Philipp Diebold, Fraunhofer Institute, Germany, (philipp.diebold@iese.fraunhofer.de)</li></ul>";;B229
39;ASCS (4th international workshop on agile development of safety-critical software);5/21/2018 2:00 PM;5/21/2018 5:30 PM;Workshop;;"The fourth <a href=""https://www.agilealliance.org/xp2018/program/ascs/"" rel=""noopener noreferrer"" target=""_blank"">international workshop on Agile Development of Safety-Critical Software (ASCS)</a> will be organized in conjunction with the XP 2018 conference, on May 21 in Porto.<br>Safety-critical systems are expanding in scope and complexity and software becomes an important and enabling technology for functional safety. This creates new opportunities and new challenges, where agile methods, practices, tools and techniques may offer opportunities to build and certify safety-critical software with lower costs in shorter time. ASCS is a meeting place to share achievements and ideas and to build your network.<br>The workshop will be based on a mix of presentations by an invited keynote speaker and by authors of accepted papers (approximately 20 minutes). 40-50% of the time will be reserved for discussions.<br>The workshop aims to cover a variety of topics, included in but not limited to the following list:<br><ul><li>Empirical studies, including industry experience reports</li><li>Tools to support and automate development and certification</li><li>Integrating safety/security into agile methods</li><li>Agile methods introduction in safety-systems organizations</li><li>Adapting existing agile methods for the safety critical domain</li><li>Addressing safety standards with agile methods</li><li>Maintaining traceability in agile methods</li><li>Agile documentation methods including automation of documentation</li><li>Agile analysis practices for safety-critical systems</li><li>Change impact analysis</li><li>Configuration management</li><li>Compliance with safety standards</li><li>Agility in safety assessment including assessor collaboration</li><li>Agile Safety Cases</li><li>DevOps and safety-critical systems</li><li>Assurance case experience reports</li></ul><br><strong>Organizers:</strong><br><ul><li>Geir K. Hanssen (C) SINTEF ghanssen@sintef.no&nbsp;</li><li>Thor Myklebust SINTEF Thor.Myklebust@sintef.no</li><li>Janusz Górski Univ. of Gdansk jango@pg.edu.pl</li></ul><br><strong>The ASCS 2018 program committee: &nbsp;</strong><br><ul><li>Tim Kelly, University of York</li><li>Stig Ole Johnsen, Norwegian University of Science and Technology</li><li>Katarzyna Lukasiewicz, University of Gdansk</li><li>Efi Papatheocharous, RICE ICT</li><li>Uwe Becker, Drägerwerk AG & Co. KGaA</li><li>Barbara Gallina, Mälardalen University</li></ul>";Philipp Diebold;B229
40;MADE18 (Second International Workshop on Microservices: Agile and DevOps Experience);5/21/2018 9:00 AM;5/21/2018 5:30 PM;Workshop;;In the last years, cloud-native architectures have emerged as a target platform for the deployment of microservice architectures. The migration of existing monoliths into cloud-native applications is still in the early phase, and only few companies already started their migrations. Therefore, success and failure stories about different approaches are not available in the literature. This context connects also to the recently discussed Agile and DevOps context where development and continuous deployment are closely linked.<br>To address the current uncertainties including a limited documentation of best-practice and benefits, this workshop aims at collecting experiences on microservice adoption, reporting best practices, but also specially failure cases, so as to build a community knowledge based on previous errors and successes. The workshop is open to research papers, industrial experience papers, and tool presentations.<br>In this workshop, we propose a follow-up of the first International Workshop on Microservices for Agile software development (WMSA17) organized at XP2017. It is also a continuation of discussions on software engineering from the first International Conference on Microservices (Microservices 2017, https://conf-micro.services/) organized at the University of Southern Denmark. The workshop will be conducted in collaboration with the Microservices Community<br>(https://microservices.sdu.dk/), which was formed at the Microservices 2017 conference.<br>The topics include:<br>- Empirical research on microservices<br>- Experiences on microservice adoption<br>- Experience on decomposition<br>- Overhead in microservice adoption<br>- Failure cases<br>- Experiences in using Agile principles or DevOps and microservices<br>- Developers acceptance of microservice<br>- Other microservice related experiences<br>- New proposals<br>- New microservice methods, techniques and tools<br><br><strong>Organizers:</strong><ul><li>Davide Taibi</li><li>Vladimir Mandić</li><li>Ronald Jabangwe</li><li>Saverio Giallorenzo</li></ul>;;B336
42;SecSE (International Workshop on Secure Software Engineering in DevOps and Agile Development);5/25/2018 9:00 AM;5/25/2018 5:30 PM;Workshop;;Software security is about protecting information and ensuring that systems continue to function correctly even when under malicious attack. The traditional approach of securing a system has been to create defensive walls such as intrusion detection systems and ﬁrewalls around it, but there are always cracks in these walls, and thus such measures are no longer suﬃcient by themselves. We need to be able to build better, more robust and more ”inherently secure” systems, and we should strive to achieve these qualities in all software systems, not just in the ones that ”obviously” need special protection. This workshop will focus on techniques, experiences and lessons learned for engineering secure and dependable software using the DevOps paradigm, as well as other forms of agile development.<br>Topics of interest include, but are not limited to:<br><ul><li>Security in DevOps</li><li>Security aspects of software deployment</li><li>Security in Continuous Deployment</li><li>Security Architecture in Agile Development</li><li>Security testing in DevOps</li><li>Container security for DevOps</li><li>Security automation tools</li><li>Security in agile software development</li><li>Agile security requirements</li><li>Risk management in software projects</li><li>Agile testing for security</li><li>Quantitative measurement of security properties</li><li>Static and dynamic analysis for security</li><li>Veriﬁcation and assurance techniques for security properties</li><li>Security and usability</li><li>Design and deployment of secure services</li><li>Secure composition and adaptation of services</li><li>Teaching secure software development</li><li>Experience reports on successfully attuning developers to secure software engineering</li><li>Industry experience talks</li></ul>;;B336
43;A-teams (First International Workshop on Autonomous Agile Teams);5/25/2018 9:00 AM;5/25/2018 12:30 PM;Workshop;;To succeed in complex environments, organizations have to find ways to support and regulate teams' autonomy according to the environmental demands and limitations. Furthermore, they have to take into consideration the degree of change and uncertainty, and that there is no one-size-fits-all autonomy approach. The process of forming and implementing agile teams with high autonomy, as well as the effective functioning of such teams, are not yet adequately addressed and understood in the context of software development organizations. Thus, there is a need for new knowledge on how organizations shall organize for the right level of team autonomy, and utilize autonomous agile teams, in order to attain better performance, productivity, innovation and value creation, and thus increase competitiveness.<br>The goal of the workshop is to facilitate knowledge sharing about the current practice of autonomous agile teams and deepen the knowledge about practices and strategies that enable autonomous teams. There will be an invited keynote, short talks (lightning talks) followed by a highly interactive session using workshop techniques. We seek contributions in the form of position papers with experience reports, empirical studies, reviews of relevant literature, and papers arguing for research needs or describing planned research.<br>We invite researchers and practitioners to this new and exciting workshop to discuss how to succeed with teamwork in agile projects. One emerging question is “How can organizations give cross-functional agile teams the authority to set directions for new products so that organizations can deliver software more rapidly”?<br>Possible research questions to engage in are:<ul><li>How do organizations build a capacity for and promote team-internal shared leadership for autonomous teams in a multi-team setting?</li><li>How to enable awareness of the tasks and the processes in and among autonomous teams?</li><li>What are effective intra- and inter-team coordination mechanisms for autonomous teams?</li><li>How can agile practices such as stand-up meetings and retrospective meetings be adjusted to build autonomous teams?</li><li>What are the challenges related to leadership, coordination and knowledge sharing of autonomous teams?</li><li>How to align learning processes in autonomous teams with the rest of the organization?</li><li>What is the balance between alignment and autonomy in complex organizations and large projects?</li><li>How can system architecture support autonomous teams?</li></ul><br><strong>Organizers:</strong><ul><li>Viktoria Stray, University of Oslo, SINTEF, stray@ifi.uio.no</li><li>Nils Brede Moe, SINTEF, nilsm@sintef.no</li><li>Eva Amdahl Seim, SINTEF, eva.amdahl.seim@sintef.no</li></ul>;;B229
44;Coffee Break;5/21/2018 10:30 AM;5/21/2018 11:00 AM;Social;;;;#XP-PX 
45;Coffee Break;5/23/2018 10:30 AM;5/23/2018 11:00 AM;Social;;;;#XP-PX 
46;Coffee Break;5/21/2018 3:30 PM;5/21/2018 4:00 PM;Social;;;;#XP-PX 
47;Coffee Break;5/25/2018 3:30 PM;5/25/2018 4:00 PM;Social;;;;#XP-PX 
48;Coffee Break;5/23/2018 3:30 PM;5/23/2018 4:00 PM;Social;;;;#XP-PX 
49;Coffee Break;5/24/2018 3:30 PM;5/24/2018 4:00 PM;Social;;;;#XP-PX 
50;Coffee Break;5/25/2018 10:30 AM;5/25/2018 11:00 AM;Social;;;;#XP-PX 
7101;Distill the Core Domain from Your Legacy App;5/24/2018 4:00 PM;5/24/2018 5:30 PM;Practice;;Let's take a very common legacy application: **procedural code** everywhere, **anemic domain logic** fully entangled with technical concerns and code. Nothing but classical stuff, right? Our mission for this truly **interactive live-coding session** will be to identify and extract the **core domain logic** out of this tar pit in order to **add a new feature** that has been **desperately asked by our business** since months.<br><br>Last but not least, we will **clean the situation** for the years to come by properly **splitting the domain code from the technical** one using the **Hexagonal Architecture pattern**. <br><br>Ready to help us in that journey?<br>;"Bruno Boucard; Thomas Pierrain";B217
7134;Agile Roadtrip - Driving your Backlog as a Team;5/22/2018 4:00 PM;5/22/2018 5:00 PM;Practice;;"Want to know how your backlog can define the ""why"" and the ""what"", but leave the ""how"" for the development team?<br>Join us in this road trip where you'll also learn how to incorporate feedback and effectively drive your team using the backlog through a very simple analogy.";"Nuno Pereira; David Silva Cordeiro";B001
7205;Performance Test Driven Development in Virtual Time;5/23/2018 11:00 AM;5/23/2018 12:00 PM;Workshop;;TDD can give us a lot of information about functional correctness of a software system, but the way it is generally used currently cannot give much information on the performance characteristics of the implemented system. We typically do not find out about performance problems until the whole system is tested together, or worse, when it fails in production.<br><br>In this session we introduce new techniques for constructing unit tests that allow us to explore performance characteristics and detect problems before deploying the software. We can use virtual time to run performance experiments without waiting for real time to elapse, so we can get the fast feedback we are used to from the TDD cycle.<br><br>The tools and techniques present are based on adapting academic performance modelling and measurement work to a more practical context, allowing developers to harness it in their day to day development process.<br><br>We have developed a novel extension to a popular Java mock-object library that allows the specification of performance characteristics for mocked components. We can then use these to test performance characteristics without needing to assemble to whole system, or to wait for real time to elapse while tests run. This allows us to inspect performance characteristics early when we make changes to software, with quick feedback, and adapt the software appropriately, before suffering negative effects in production.<br>;Robert Chatley;B232C
7209;What We've Forgotten About Agile;5/22/2018 2:00 PM;5/22/2018 2:30 PM;Practice;;"In times of Lean Startup, Lean Enterprise, Spotify Model, and other buzzwords that have come up to describe the bridges between agile software development and the business, one continues to see frustration with ""agile"" project's results. This talk starts from the premise that we forgot what makes agile work - sound engineering practices that enable quick feedback - and seek to re-embrace those principles in a way that helps managers, analysts, and other business disciplines can support development teams to perform agility's most basic activities and to find success.<br><br>We will talk about new research about Agile Practices and Organizational Culture, Business Alignment and IT efficiency and do the obligatory review of the Agile Manifesto. Expect to come out of this talk eager to collaborate with engineers to turn Agile adoption around in your organization.<br>";Lourenco P. Soares;B002
7235;Through the Looking-Glass: Musings on Software Ecosophy;5/24/2018 4:00 PM;5/24/2018 5:00 PM;Practice;;The increasing pervasiveness of software means that complex software-embodying and software-embodied systems are now inextricably linked in many ways to the world around us. Looking across the interdisciplinary boundaries between systems thinking, ecology, philosophy, postmodern psychoanalysis, and architecture, we're going to pragmatically explore the importance of making software systems which support human existence, and we'll engage in a discussion on how our daily choices and processes affect the wholesomeness of the artifacts which we as a profession are responsible for.<br>;Ursula Maplehurst;B001
7253;Fighting the Bear: Culture & Fears of Agile transformation;5/22/2018 2:30 PM;5/22/2018 3:00 PM;Practice;;"Our story is based on a real experience of Raiffeisenbank being involved in the huge transformation for the last few years. <br><br>Hordes of the consultants from the market are ready to share their ""unique"" experience on how the classical team-level Scrum can solve all the problems of your organization. For some reason applying Scrum-by-the-book to an enterprise of a certain size regularly fails. Hmm.. May be we forgot something? Reality of large enterprise is not so friendly. One can say that there are frameworks which were designed to help companies with the issue of scaling. But there are plenty of questions in the cultural field still stay unanswered:<br><br>How to find and retain right product owner for banking products? Should you make former ""Head of Department"" a Product Owner and how the company can support her/him in this cultural shift?<br>How to deal with the habit of avoiding a feedback?<br>How to inject a ""Team-interview"" format into a rigid hierarchical structure?<br>How to transform existing ""Push"" mental models in managers' heads?<br>Scrum says that the team should be autonomous. In the enterprise. With a 20+ years of comand&control legacy. Reaallly?<br>How to scale the whole system and make sure that your setup is a right mixture of product & capability?<br>How to deal with IT complexity which stops you from being responsible for e2e product development?<br>Our path shows that the answers to these questions are not defined in any framework. And we believe that the vast majority of answers has great dependency on your corporate culture. At every single level. We can share the experience of our 2-year Agile Transformation, and we promise that it will be the most practical talk you've ever listened to.<br>";"Sergey Shcherbinin; Nikolay Knysh";B002
7257;It's Not About the Standup: Why Agile Isn't Working for You;5/23/2018 11:00 AM;5/23/2018 12:00 PM;Practice;;We’re several years into an agile transformation at IBM and some teams are thriving while others are still struggling. The reasons might surprise you (hint: it’s not about the practices). Come listen to stories of real-life teams and what characteristics seem to predict success or failure, in terms of agile adoption and business outcomes. Prepare to share your own stories and contribute to the discussion.<br>;Kristine Berry;B217
7300;Ship It or It Never Happened: The Power of Docker, Heroku & CircleCI;5/22/2018 4:00 PM;5/22/2018 5:00 PM;Practice;;"Shipping code is hard and it is rough! It doesn't have to be. Using Docker, Heroku and CircleCI you can set up a world-class Continuous Integration and Continuous Deployment pipeline in an hour with advanced functionality like Heroku preview apps, provisioning servers to scale on-demand and containers that leverage layering to enforce Enterprise requirements, while giving developers access, flexibility and speed to get their work done. All developers should know how to push their code publicly on the internet without relying on others or learning super specific skills for one cloud service. A Docker centric solution is applicable to services like Zeit Now or AWS ECS/Fargate. With my duluca/minimal-node-web-server Docker image, the audience will learn how to prepare their web apps for cloud deployment in a matter of minutes. They will also learn how to &nbsp;build their own minimal micro-services following security best practices.<br><br>";Doguhan Uluca;B003
7312;Continuous Integration in the Microchip and Silicon World;5/22/2018 2:00 PM;5/22/2018 3:00 PM;Practice;;Setting up test environments for hardware and microchip projects can take months of development time, with lots of manual work. These activities are very risky because feedback can only occur after producing a test chip or even the final product.<br><br>Applying the software development practices known as Continuous Integration to the hardware and microchip design world is now a reality, allowing these projects to start iterating prior to final systems availability, saving months of development time.<br><br>This talk will describe how the blurred lines between hardware and software worlds are vanishing due to the adoption of Continuous Integration practices. Existing technology helps to merge hardware and software flows, allowing teams to build, test and validate the systems with improved quality, faster and more frequently even before the production of the final microchips.<br>;Carlos Palminha;B003
7418;Fragile Agile - Coaching a Tired Team;5/23/2018 4:00 PM;5/23/2018 5:00 PM;Practice;;As an Agile Coach or Scrum Master do you want to add energy to your team that looks not enthusiastic or resists change? Is is possible to cause harm to your team even with proper Agile coaching? Yes, if you are working with tired, exhausted or even burned-out teams, they do need special treatment, usually counterintuitive to the coaches. Would you like to learn special set of actions, taken from the medical practice, tailored to work with exhausted people? Would you like to experience an upward spiral from tiredness to the true intristic motivation and creativity? Join me in the self test and practical steps discussion what needs to be modified in the coaching and facilitation techniques and in the Agile process that you as a coach or a scrum master can help your worn out team to transition into a better process and produce steady results.<br><br>;Anna Obukhova;B002
7421;Agile for the Introvert;5/24/2018 4:00 PM;5/24/2018 5:00 PM;Practice;;"Ever wondered why some people prefer to work alone? Or why some people cringe when pair programming is mentioned? It might be that that person, like me, is an introvert. But is is really that simple? Can we really put every person in a box labeled ""introvert"" or ""extrovert"" or are we all just ambiverts? <br><br>During this session I will talk about introverts, extroverts and everything in between. <br>Drawing from almost 15 years of personal experience being an introvert on agile teams I will talk about the differences of being an extrovert<br>or an introvert, how to foster an inclusive team environment, and the importance of psychological safety.<br><br>You will hopefully leave this session better fit to help EVERYONE on your team to reach their full potential!<br>";Tobias Anderberg;B002
7425;The Product Owner and Scrum Master Brain Transplant! Mwuhahahaha!!!;5/22/2018 4:00 PM;5/22/2018 5:00 PM;Practice;;Imagine you are a Mad Agile Scientist and have a diabolical experiment to conduct - what would happen if you exchanged the brains of a Product Owner and Scrum Master? Mwuhahahaha!!! How would the body of a Product Owner with the brain of a Scrum Master act? And vice versa?<br><br>Perhaps the Scrum Master would now treat the team like a backlog? This Scrum Master would be focused on value and maintaining a coaching backlog of team and person improvements. This Scrum Master is refining the team, crafting a unit that delivers value.<br><br>And perhaps the Product Owner might treat the backlog like a team? Rather than backlog refining, they coach the backlog. They would be focused on nurturing, protecting, and empowering the backlog. The backlog might transform from an irritation into a labor of love.<br><br>Although this experiment sounds terrible, this change of perspective might be what you need to reanimate your dead team or backlog.<br><br>Join the fun and come learn what horrifying results await!<br>;Alex Sloley;B002
7506;From Feature Branching to Flow;5/24/2018 11:00 AM;5/24/2018 12:00 PM;Practice;;With the rise of distributed version control systems, feature branches are again popular because it is so easy to create them. However easy doesn’t mean cheap. When feature branches become long lived branches they become problematic as they introduce batch work which impacts stability and the delivery flow of the team. <br><br>But what is the alternative ? Reducing the batch size, meaning having everybody of the team commit more frequently into mainline, and thus integrating more often and thus adopting Continuous Delivery. Which brings us closer to a single-piece flow.<br><br>But how do you make sure it doesn’t become a mess when everybody commits continuously into mainline ? During this session I will present 4 techniques to help keep the code base always working and releasable while frequently committing to mainline: incremental development, hiding new functionality, branch by abstraction and feature toggles.<br><br>The key takeaway is an appreciation of a different branching strategy.<br><br>The target audience is software engineers or anyone interested in seeing a code base gradually evolve.<br>;Thierry de Pauw;Auditorium
7525;Maximizing Flow by Visualizing Feature Timelines;5/22/2018 4:00 PM;5/22/2018 5:30 PM;Practice;;"<br>Don Reinertsen once said, ""The enemy of flow is the invisible and unmeasured queues that undermine all aspects of product development performance,"" yet most development teams focus more on estimation than the ruthless elimination of time their work items spend in wait states. They remain unaware of the pernicious negative impact of these invisible queues on their productivity. In this talk you'll learn the importance of visualizing and measuring queues for your team using feature timelines, and how small improvements in limiting work in progress and reducing time spent waiting can lead to major improvements in performance. <br><br>We'll review the work timelines for several teams, and shows how visualizing feature development using timelines provides a radically clear view of team progress and areas where work is getting stuck. You'll see how not managing time spent in wait states is such a suck on team productivity and motivation, and what to do to address those situations.<br><br>We'll be using the application Flow to visualize and measure the presence and impact of these hidden queues on team productivity. Flow is a SAAS application that enables teams to visualize and manage their development work and coordinate it with other teams easily and effectively. Unlike other agile and lean applications that provide obscure, irrelevant and arcane metrics and dashboards, Flow enables teams to clearly see their progress and identify areas to improve. You'll leave with a deeper understanding of lean principles, and a checklist of practical steps to confront and manage queues in your own team's work.<br>";Paul Rayner;B217
7532;Inspired Teams : Emotional Intelligence as a Performance Multiplier;5/24/2018 2:00 PM;5/24/2018 3:00 PM;Practice;;"Creating an environment where teams thrive and perform can be challenging; the composition of the team may be off, communication tools get in the way and employee engagement scores across the industry are at historic lows. The good news is that there is science available to guide change leaders in increasing the chances of helping - rather than harming - teams towards high performance and finding inspiration in work. In this talk, one of the authors of the Harvard Business Review-published Team Emotional Intelligence (TEI) concept and an enterprise transformation coach with experience from Nokia, Intel, McAfee and Statoil explain the science behind TEI and the next generation team framework, called Inspired Teams, which builds on TEI and incorporates concepts from Agile. They will detail the tangible business benefits that result from finding inspiration in work and provide practical guidance on how to get there. At the end of this session, participants will understand how change leaders can create an environment where teams can transcend high performance and unleash Inspired Teams.<br>";"Jorgen Hesselberg; Steven Wolff";B002
7556;Business Value Over Architecture?;5/23/2018 3:00 PM;5/23/2018 3:30 PM;Practice;;At the core of lean product delivery is -of course- the continuous delivery of a product. Yet, how does this impact the architecture, especially when welcoming changing requirements (even late in development)? Basically, the architecture should be enabled to incorporate these changes and therefore to emerge over time. This implies not to finalize the architecture upfront.<br><br>For a small team being jointly responsible for the product delivery AND the architecture this is often already a challenge yet even more so for a large team. But, also for large-scale agile development the requirement for an emergent architecture holds true. However, it is difficult if not unrealistic to expect e.g. 300 team members to decide jointly on the architecture.<br><br>Moreover, the role of and support for the architecture depends not only on the degree of the size of your development effort but as well on the degree of complexity of the system. <br><br>In this session I report on my experiences using different models for supporting an emergent architecture in different (mainly large-scale) environments that take the degree of complexity into account.<br>;Jutta Eckstein;B217
7599;Hypothesis Driven Development by Example;5/24/2018 11:00 AM;5/24/2018 12:00 PM;Practice;;Hey, psst!? Are you Continuously Deploying yet? You know everybody is doing it, right?<br><br>Why? <br><br>Some to go faster. Some to increase quality. Some because, let’s face it, it’s a really cool buzzword.<br><br>But let’s talk about what the _real_ reason is. _Should_ be. The control necessary to do Hypothesis Driven Development. Or, as I like to call it: Test First Product Management.<br><br>With the popularity of Lean Startup, we’ve seen a significant uptake in these kinds of business experiments. But how does it work in practice? We need feature toggles, A/B testing, analysis tools, and more? That sounds difficult. How do we get started today? <br><br>In this talk I’ll go through some examples, showing how to build a simple system that allows you to start with HDD right now, by coding it right on stage. And I’ll even give some hints on how to structure your process around that along the way.<br>;Wouter Lagerweij;B001
7607;Should Testers Participate in Code Reviews?;5/23/2018 12:00 PM;5/23/2018 12:30 PM;Practice;;"A lot of software sucks. It’s poorly documented and unmaintainable. New team members take ages to get up to speed and the support team struggle to understand it. The maintenance and enhancement costs increase over time and, sooner or later, someone suggests a rewrite.<br><br>There are a lot of reasons why this happens, but one of them is the industry’s poor approach to code-review/peer-review. When peer-reviews are conducted solely by developers, the focus is on those aspects that are of most interest to them. The documentary aspect of unit tests, the ease of on-boarding new team members, and the impact on those tasked with QA are often ignored.<br><br>The inclusion of team members that have QA expertise can go a long way to improving this situation, ESPECIALLY if they don’t have development experience. As well as ensuring that unit tests adequately document the behaviour of the code, it also enables QA to make good, risk-based judgements about which areas of the code are most in need of additional testing, whether manual, automated or exploratory.<br>&nbsp; <br>In this highly interactive session, we’ll explore how and why team members with QA expertise should participate in the peer-review of development commits. We’ll dig into the positive impact this has on our products, our processes and our people. You’ll leave with an actionable list of improvements including a structured description of an inclusive peer-review process and a modified Definition of Done.<br>";Seb Rose;B232C
7614;Games for Learning About Conflict Resolution;5/23/2018 2:00 PM;5/23/2018 3:30 PM;Workshop;;Conflict isn’t inherently a bad thing – it’s inevitable when people are working closely together on things that they care about. In fact, diverging viewpoints can bring new insights to help teams move forward and create something new. Dealing with conflict head-on is challenging for many people, yet few teams spend time explicitly considering “how will we work together when things get rocky?” Teams need to build the skills to be able to navigate through rough times together and come out with win-win solutions.<br><br>This workshop will present useful models for considering team conflicts supported by games teams can use to develop and practice conflict resolution skills. The models address underlying drivers of conflict, modes for responding to conflict, assessing conflict severity to determine appropriate interventions, and the patterns of principled negotiation. The games build on the concepts to help participants gain insight and develop important skills in a non-intimidating and memorable way.<br>;Ellen Grove;B232C
7626;Improving on 100% Coverage: Demonstrating Mutation Testing With Cosmic Ray;5/23/2018 2:00 PM;5/23/2018 3:30 PM;Practice;;"A diligent approach to test-driven development naturally results in code with very high levels of test coverage at, or approaching, 100%. Nevertheless, even with high levels of coverage, and sophisticated techniques such as property-based testing, programs can exhibit surprising failures.<br><br>Mutation testing further tightens the testing vice, by deliberately breaking – or mutating – production code, in order to determine whether such breakage is detected by the test suite. If not, then there is clearly room for improvement in the test suite. Alternatively, the code that has been mutated is not used, and can be removed from the system under test.<br><br>In this talk, we’ll demonstrate our open-source mutation testing tool, Cosmic Ray and its application to libraries with 100% statement and branch coverage. We’ll explore the particular challenges of mutation testing, including performance and scalability, the difficulty in interpreting the results, and a novel technique for anchoring the metadata used to control the mutation testing process to particular locations in the production code. &nbsp;You’ll see how mutation testing has helped us discover subtly dead code where only parts of statements are never executed, improved testing of complex expressions, and made more rigorous the testing of complex data structures. We’ll demonstrate the challenges of mutation testing locally by developers on their own computers, and how to overcome these challenges by scaling up, using infrastructure provisioned in the cloud. &nbsp;<br>";"Robert Smallshire; Austin Bingham";B002
7630;User Stories Are Fun! Capture the Magic With Story Cubes® & Innovation Games®;5/23/2018 2:00 PM;5/23/2018 3:00 PM;Workshop;;"Does the idea of writing user stories get you and your Team down? &nbsp;If you feel there has got to be more to a user story than that tired, old “As a [user], I want…” template, then this session is for you! &nbsp;In this hands-on and practical session, Carlton Nettleton will show the essential elements to writing great user stories and you will practice two techniques to find hidden requirements using Innovation Games® and Story Cubes®. &nbsp;Start writing better stories today!<br>";Carlton Nettleton;B217
7646;Promises, Always Promises…;5/23/2018 4:00 PM;5/23/2018 6:00 PM;Practice;;The concept of promises in software programming isn't new — but as it is the case with many other topics, it has regained attention 35 years after its invention with the advance of web client programming: promises allow indeed to express nicely sequences of asynchronous behaviours. If at the first glance promises seem fairly easy to use, it's a whole other business when it comes to understand them with enough depth to be able to implement their mechanism.<br><br>This session ambition something akin to skiing down an icy double black diamond trail with a monoski: to program in a ridiculously short amount of time a full-fledged promises framework in JavaScript, in the hope to understand how it *really* works. And maybe also to learn few things along the way about Test-Driven Development, Code Reading and Hegelian philosophy (or not). Thus, we will here reverse the common approach of learning in order to be able to do — and instead, do in order to be able to learn.<br><br>Participants are invited to come with their computer to code along during the session. Those who learn by doing will joyfully dabble into the code, the rest of the crowd should have fun enough eating popcorn and watching the presenter making a fool (or a hero) of himself attempting doing something impossible.<br>;Emmanuel Gaillot;B232C
7654;Contract Testing in Theory and Practice;5/24/2018 4:00 PM;5/24/2018 5:00 PM;Practice;;"End-to-end tests are usually brittle, slow, and hard to work with, but unit and integration tests often inspire a false sense of confidence. This tension between industry best practice (test automation pyramid) and business demand for high confidence results in testing the same functionality multiple times, with a negative effect on costs and speed of feedback. <br><br>To write unit and integration tests we need test doubles (fakes, stubs, mocks etc.) to &nbsp;simulate a component’s dependencies. Contract testing is a technique that gives us confidence that our test doubles accurately simulate the dependencies that they replace. <br><br>Contract testing has been known about for a long time, but the extra investment in creating and maintaining (yet another) suite of tests has restricted their uptake. With the growth of micro-services, there is an urgent need for a renaissance in contract testing, with a specific focus on consumer driven contracts. This has led to the creation of the PACT open source tool, which is designed to facilitate the adoption of contract testing for HTTP based micro-services.<br>&nbsp;<br>In this session, we’ll examine the motivation for contract testing, look at how you can incorporate contract testing in your development practices, and explore an open source tool, called PACT, that can help streamline contract testing for HTTP based services (including REST & micro-services).<br>";Seb Rose;B003
7658;Creating a Distributed Design Authority: Lessons for Modern Software Architects;5/24/2018 11:00 AM;5/24/2018 12:00 PM;Practice;;"The best way to grow an autonomous, self-organizing team is to give the team responsibility and authority over the software it designs. &nbsp; Centralized design authorities --- imagine the traditional software architect --- will nearly always be slower, more rigid, and all around less agile than an empowered collection of developers who can immediately respond to rapidly changing information. &nbsp;Modern software development teams need architects who can create and foster a distributed design authority, a situation in which individuals are empowered to decide the direction of the software system. &nbsp;In this session we’ll learn how to create a distributed design authority and keep it running safely and effectively.<br>";Michael Keeling;B002
7659;Keep the Oral History Alive With Architecture Haiku;5/22/2018 2:00 PM;5/22/2018 3:00 PM;Workshop;;"My team, like many software development teams, rarely writes architecture documentation. &nbsp;Instead, we rely on storytelling to spread ideas and explain the rationale for our decisions. &nbsp;Relying only on oral history for describing our designs has one huge flaw: people. &nbsp;People forget. &nbsp;People move to new teams. &nbsp;People get sick and aren’t always available to tell a story exactly when you need it. &nbsp;To help us keep the oral history alive we use a variety of lightweight documentation methods including the architecture haiku. Architecture haiku is a bite-sized summary of your software system’s architecture that is cheap to make, easy to change, and delightful to read. &nbsp; &nbsp;In this session you’ll learn how to create and foster an architecture oral history by building an architecture haiku.<br>";Michael Keeling;B217
7668;Retro Poker: A Game Technique to Boost Your Team Continous Improvement;5/23/2018 12:00 PM;5/23/2018 12:30 PM;Practice;;"The Manifesto says: ""At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly"". <br>Okay, but let's be honest: The ""Continue doing, Stop doing and Start doing"" template is not enough anymore. This session will present to ScrumMasters, Agile Coaches or even Managers or Developers, the Retro Poker, a tool to discuss and understand the current team context and choose the best facilitation technique to be applied.<br>";Luiz Lula Rodrigues;B002
7675;Cultivating Your Software Design Heuristics;5/23/2018 2:00 PM;5/23/2018 3:00 PM;Practice;;"The ouroboros (οὐροβόρος in the original Greek) is an image or archetype of a serpent shaped into a circle, clinging to or devouring its own tail in an endless cycle of self-destruction, self-creation, and self-renewal. Becoming a good software designer sometimes feels like that. We all use design heuristics (even if we haven’t articulated them to others) to discover, understand, explore, create, modify, or extend complex software systems.Heuristics can aid in design, guide our use of other heuristics, and even determine our attitude and behavior. As agile software designers we value frequent feedback and &nbsp;decomposing larger design problems into smaller, more manageable chunks.<br><br>This talk introduces you to some valuable heuristics I've collected over years as well as several design and modeling heuristics trecently distilled from discussions with developers from the Domain Driven Design community. It will challenge you to grow designer by becoming &nbsp;more aware of your personal design heuristics and how they are shaped and how they can evolve. You can grow as a designer by examining and reflecting on the decisions you make and their impacts, becoming more aware of seemingly minor decisions that were more important than you thought, and putting your own spin on the advice of experts.<br>";Rebecca Wirfs-Brock;B001
7682;Liberating Structures... 36 Tried and True Facilitation Techniques to Amp up Collaboration;5/24/2018 11:00 AM;5/24/2018 12:00 PM;Workshop;;You will learn how to facilitate the discussions your org needs and your org will learn how to have constructive dialogs. I am going to demonstrate how to use these techniques in the workshop. And all the attendees are going to be fully immersed and ready to wield their new knowledge the very next day at work.<br><br>Come learn how to help your team(s), org(s), and company(ies)!!!<br>;Alex Sloley;B217
7683;Mastering Self-Organization;5/24/2018 2:00 PM;5/24/2018 3:00 PM;Practice;;"Self-organization is one of the fundamental aspects of agile organizations. Yet it is a challenge and there are lots of myths around it.<br>Some people say: ""With self-organization, I lose control totally"". Others are happy as they think ""Wow! This means I can all do it my way"".<br>The truth is - of course - somewhere in the middle: self-organization is still a form of organization.<br>That means, that all essential problems, that organizations need to cope with, need to be also coped with in organizational eco-systems that are stronger based on self-organization. <br>But how? And to what extent? And how to achieve a good balance between the essential organizational needs of alignment and autonomy.<br>In this talk we will de-mystify and look at the key ingredients of self-organization. Based on my 20 years of SW development leadership experience at Ericsson, one of the world's largest SW companies with more than 20,000 Developers, I will share what we have discussed, experimented and learned in this area.<br>";Hendrik Esser;B217
7684;Inclusive Collaboration: The Sensory Experiment;5/23/2018 4:00 PM;5/23/2018 6:00 PM;Workshop;;Explore how different environmental conditions impact our ability to perform a task and experience how understanding sensory difference can help you get the most out of yourself and your team.<br>Following the success of last years Silence Experiment, Inclusive Collaboration is back with the next in the series: #2 The Sensory Experiment. <br>This time around our intrepid participants will explore different sensory environments whilst creating a simple product for charity.<br>We will explore a variety of conditions and in each consider our level of comfort/discomfort and the resulting effect on the products produced, both in terms of number and quality.<br>We will then consider more broadly how homogenous or varied people's preferences are and what effect this may have in the workplace.<br>We will discuss how we might change the ways we collaborate accordingly.<br>;Sallyann Freudenberg;B217
7685;Dealing with Complexity – A Serious Learning Workshop;5/25/2018 9:00 AM;5/25/2018 5:30 PM;Workshop;50;"Have you ever wanted to learn how to deal with Complexity in an effective way?<br>Have you ever wanted to learn how to use the power of Kaizen to improve your learning process?<br>Come to play, learn and grow your knowledge about Agile & DevOps with this <strong>un-for-get-ta-ble</strong> Serious Learning Workshop!<br>In a just a single day of playing an iterative & incremental Serious Learning ""Live-Action Role-Playing"" (LARP) Game, you will:<br><ul><li>Learn the real meaning of the Agile Manifesto.</li><li>Learn when and how to conduct safe-to-fail experiments.</li><li>Learn when and how to conduct set-based design and concurrent engineering.</li><li>Learn when and how to use Scrum to transition a problem from the complex to the complicated realm.</li></ul>";Nuno Rafael Gomes;B110
7686;"Keynote by Kent Beck on ""XP as an Incentive System""";5/23/2018 9:00 AM;5/23/2018 10:30 AM;Keynote;;Every social system creates incentives. What behavior is encouraged on an XP team? What behavior is discouraged? How do incentives align and misalign among the people involved?<br>;Kent Beck;Auditorium
7687;Start Your Engines! Accelerating DevOps Performance Using Lean Metrics;5/25/2018 4:00 PM;5/25/2018 5:00 PM;Workshop;;"""We have reached an impasse and cannot accelerate our DevOps performance?"" Does this sound like a common issue?<br />Often companies have DevOps practices in place, but are unable to accelerate their throughput of delivery speed. The ability to accelerate the time to deploy code releases is one of the key benefits of DevOps.<br /><br />Lean thinking and management practices can further accelerate DevOps delivery by providing a set of measurement standards to help create more beneficial products, save money, boost productivity, reduce waste, and map to value.<br /><br />Lean practices accelerate performance of project delivery in a DevOps environment by using a single, optimal set of practices and metrics that matter to reduce waste and accelerate productivity. Creating a system that bases their operations on lean principles that includes the following (a) value, (b) value streams, (c) flow, (d) pull, and (e) perfection. Consider lean calculations such as Takt time, Cycle Time, Queue Time, MTTR, and process lead time to help accelerate DevOps practices.<br /><br />Other lean measures and metrics such as mean time to recovery (MTTR) can resolve the amount of time that to recover from failure, while Total Containment effectiveness (TCE), defect stratification by type, Poisson modeling for defect clustering, total defects per unit (TDU), rolled throughput yield (RTY) can be used to get to the root cause of defects and reduce them. While these are complex metrics used in Lean and Lean Six Sigma environments, many of their principles can be used to turbocharge operations.<br /><br />In this session, the tenets of lean thinking will be linked to ways to improve and accelerate execution in DevOps environment. Flashcards will be provided to participants to train them on the tenets of lean metrics.<br /><br />As a Lean Six Sigma Black Belt, I am passionate to find ways to accelerate throughput and performance, and remove bottlenecks and defects. This talk was presented at Agile2015, and well received by the group as a workshop where they uncovered better ways to improve software delivery processes. The talk is specifically formulated to improve DevOps but lean metrics can be used to measure and improve performance across all facets of software delivery.<br />";Gail Ferreira;B113
7688;The Fifth Discipline: Keys to Unlocking the Transformational Power of Scrum;5/25/2018 9:00 AM;5/25/2018 12:30 PM;Workshop;25;"In 1990 Peter Senge published his seminal work, “The Fifth Discipline.” The five disciplines contained in the book are key to successful organizations, and have profoundly changed organizations that have adopted them. They are particularly important to the success of Scrum teams; however, many Scrum practitioners are not aware of the five disciplines. In this tutorial, you will learn about the five disciplines and how they are the foundation of team transformation. You will participate in group exercises to explore how to apply them to unleash the power of Scrum in your organization.<br>";Neil Harrison;B113
7690;Agile Requires Continuous Testing—Not Just Test Automation;5/25/2018 4:00 PM;5/25/2018 5:00 PM;Workshop;;Given that most teams (Agile or not) report test automation rates around 30%, it’s not surprising that many development teams cite testing as one of their primary pain points. Adopting Agile, with its fast and frequent iterations, only exacerbates underlying problems with traditional approaches to test automation. Brittle UI tests need constant maintenance to keep pace with the evolving application, late-iteration testing is often the bottleneck for getting user stories “done done” on time, and slow test execution time is not compatible with CI and Agile’s emphasis on fast feedback. In fact, it’s not uncommon for regression suite execution time to exceed the total length of the sprint itself!<br>For teams to meet business expectations for more software—faster—without putting the business at risk, testing needs to shift perspectives. We used to ask “Are we done testing,” and answer it by checking whether new requirements/stories were covered and how many regression tests were executed. That’s no longer feasible when a releasable candidate must be delivered every two weeks, or sooner—and a software failure is now considered a business failure. To protect the brand and the user experience in the context of Agile release cycles, we need to ask “Does the release candidate have an acceptable level of risk?” This is where Continuous Testing comes in.<br>;Ingo Philipp;B105
7691;Visual Engagement: Visual Thinking Applied on Emergent Practices Adoption;5/21/2018 11:00 AM;5/21/2018 12:30 PM;Workshop;;Emergent Practices and Visual Thinking are wide concepts that for many times become subjective in our discussions. During the past few years a lot has been said about these subjects disconnectedly, but do we really understand? What are Emergent Practices? Why should we use them? Isn’t Visual Thinking just about doing a little drawing instead of writing? Do these two things work together?<br>This talk aims to demonstrate through simple practices how Visual Engagement can support the adoption of Emergent Practices on a daily basis of agile teams providing clarity to complex decision making.<br>;João Reis;B105
7693;DevOps Practices Tutorial;5/21/2018 9:00 AM;5/21/2018 12:30 PM;Workshop;20;This tutorial presents the practices involved in the DevOps mindset and some tools commonly used to implement them. It offers a mix of theory and practice with a hands-on approach. Practices like Infrastructure as Code, Database Versioning, Immutable Infrastructure and Continuous Delivery will be presented using tools like Docker, Kubernetes, Openshift, Jenkins, FlywayDB and Ansible. Participants bring their notebooks.<br>;Nicolas Paez;B217
7694;Test Driven Development - Workshop;5/25/2018 9:00 AM;5/25/2018 5:30 PM;Workshop;;"Test driven development (TDD) is a technique that developers use to develop software. With it comes expectations such as; executable documentation, loosely coupled components and a safety net for refactoring. Many presentations have been made about TDD, but here Sebastian will show you how it can be done. The workshop starts with an introduction to TDD. Depending on the number of participants, there will either by a mob or programming in pairs. In case of pair programming, it can be done in any language, but the trainer is proficient in Java. In case of mob programming, the development will be done in Java.<br><br>Exercise 1:<br>Sebastian will act as a customer and let the developers capture requirements and from that create todo lists that are appropriate for TDD. As the participants work on the code and depending on how fast they go, there might come new requirements from the customer. The first exercise is about understanding the basics of TDD.<br><br>Exercise 2:<br>Is an exercise about how the order in which you develop your tests can affect your flow.<br><br>Exercise 3:<br>We go back to our original exercise as new requirements start coming in.<br>";Sebastian Larsson;B232C
7695;Extreme Visual Thinking;5/25/2018 1:30 PM;5/25/2018 3:30 PM;Workshop;;You do not have to be a great writer to compose an email. Likewise, it is not necessary to be a great designer to use visual thinking. To explain a concept, discuss complex subjects or even design a new architecture, visual thinking is a powerful tool that requires only pen and a whiteboard or piece of paper. It’s not art. It’s just the most efficient and effective method of conveying information to and within a development team. This disruptive and daring workshop will provide you visual techniques to enhance communication, feedback, simplicity, and courage on your day-by-day, and teach you on practice the main techniques to start applying it next Monday.<br>;"Luiz Lula Rodrigues; Romeu Mattos";B113
7696;To Swarm or Not to Swarm (Programming and Review Simultaneous in Pairs);5/21/2018 2:00 PM;5/21/2018 5:30 PM;Workshop;;Collaboratively, we will decide to write code for a Brazilian open source project or some other project that the attendees want to develop.<br>The pair programming is a practice for software development teams improve the quality of their code and the technical level of the team, encourages the dissemination of knowledge, promotes the idea of ownership and collective responsibility, reduces the number of system defects, stimulates satisfaction, motivation, collaboration, communication and trust among team members. However, its burden is the loss of productivity in some cases.<br>The Programming and review simultaneous in Pairs use the Concurrent Engineering, Code Review, Mob Programming and Coding Dojo, aiming to increase productivity in the development of Pair Programming, fit better than traditional Pair Programming to senior programmers and tasks of all levels of complexity.<br>Mob programming is a whole team technique that includes programmers and others such as product owners or testers working together in the same space and time, discussing solutions and writing code in a fast succession on a shared screen and keyboard.<br>We will experiment these approaches ('Mob Programming', 'Programming and review simultaneous in pairs') in practice and our productivity and quality of the code produced will be measured.<br>;Herez Moise Kattan;B113
7697;Automatic Refactoring Implementation With TDD and Meta-Programming;5/21/2018 2:00 PM;5/21/2018 5:30 PM;Workshop;;This workshop brings together three very important topics of our profession: TDD, Refactoring and Meta-programming.<br>This is a hands-on workshop where through simple exercises and TDD, assistants will learn about meta-programming first to finally apply the learned concepts implementing an automatic refactoring.<br>At the end of the workshop the assistants will know what read/write structural and read/write behavioral meta-programming is, they will have implemented an automated refactoring and they will have learned how to use TDD for this type of problems. <br>The workshop will help assistants also to start thinking about building their own tools, how the programming language they use helps or hinder its development and will have a real encounter with a meta-circular programming environment.<br>We will use Smalltalk as programming language, but no previous experience is required.<br>;Hernan Wilkinson;B217
7698;A Hands-On LEGO®-Based Workshop on TDD and Testing Patterns Like Mocks, Fakes, Stubs Etc;5/25/2018 9:00 AM;5/25/2018 12:30 PM;Workshop;50;"<strong>Test Driven Development (or TDD)</strong> i<em>s one of the most well-known practices of eXtreme Programming (XP) family.TDD is simply understood as a mechanism of writing test code before production code followed by re-factoring if required. However, the simplicity of TDD lies more in changing the mindset where one has to let go the urge of writing the code without writing the tests.<br /></em><br /><em>Further, it's also very important to understand what all we need to come up with <strong><u>""Test First""</u></strong> approach, what extent of visualization, planning, and thought are required to come up with the test(s) which serves the purpose without cluttering. <br /><br /><strong>Refactoring</strong> in TDD is one of the important steps to remove cluttering both for code as well for the tests.</em><br /><br /><em>Once we decide to write tests, we can't run them in isolation as we need certain preconditions to be present so as the code in question can execute in a similar situation as it'll experience in a production environment. There are various ways of achieving the same, but most widely used of them are testing patters like Mocks, Fakes, Stubs, Spies, Dummies, and Doubles etc. The usage of these patterns not only impacts the <u><strong>""Test Code Quality"" </strong></u>but also the quality of <u><strong>""Product""</strong></u>.</em><br /><br /><em>This workshop intends to create a full-fledged application by the end of the workshop so as to provide the practical demonstration of the TDD and Patterns like Mocks, Fakes, Stubs etc. The application of choice will be simple Youtube Search Application / ToDo Application.<br /></em><br /><em>The workshop shall be generic in nature and no programming experience is needed to understand the same. All activities shall be performed using <strong>LEGO&reg; </strong>blocks and the presenter will covert the <strong>LEGO&reg;</strong> blocks output into the code so the working application and progress of work remain visible throughout.</em><br /><em><br /></em>";Deepak K. Gupta;B111
7699;OKR Workshop - Where You Turn Inspiration Into Impact!;5/21/2018 9:00 AM;5/21/2018 10:30 AM;Workshop;;You may have heard about successful organizations like Google, LinkedIn, Zynga and Twitter implementing Objectives and Key Results (OKRs) to move faster towards their envisioned future. You may be looking for a way to connect your company’s vision with what’s going on the trenches as well.<br>Yearly strategy sessions are too high-level and don’t connect with the daily activities and decisions that are made. Instead of having to face the fact that reality catches up with yearly goals, you now have the power to act pro-actively and use a flexible system to continuously improve the alignment inside your organization and get results that really count.<br>This workshop is a hands-on experience into using Objectives and Key Results.<br>;"Petra Liesmons; Kitty Iding";B105
7700;Learning Fast - Essentials for Company-Wide Agility;5/21/2018 9:00 AM;5/21/2018 5:30 PM;Workshop;;Agile beyond IT and beyond just doing it, but rather being it requires experimenting continuously in order to learn continuously. Thus more important than failing fast is learning fast.<br>In this workshop we will learn what learning fast means for every individual and the organization as a whole and we will define experiments for you to use in your company for becoming agile truly. This will allow you to create an environment for continuous innovations.<br>In this workshop we will describe experiments for making:<br><ul><li>the organizational structure (hierarchy?) more agile</li><li>the organizational processes faster so that they enable innovation</li><li>the organizational strategy better aligned with current needs so that your organization is able to drive the market instead of being driven by the market</li></ul>;"Jutta Eckstein; John Buck";B232C
7701;Refactoring Legacy Code: Mobbing Dojo;5/25/2018 1:30 PM;5/25/2018 3:30 PM;Workshop;;Participants will learn to incrementally improve the design of legacy code by introducing tests first, identifying code smells and applying refactoring transformations to eliminate those smells.<br>The workshop is performed using a mob programming format, where each participant takes a short turn on the keyboard, while the rest of the “mob” discusses solutions and offers guidance. We will start with an initial mob of 6, and provide a mechanism for people to rotate out and for new people to join. Others in the audience will be observers and learn how mobs can collaborate to solve technical challenges. The audience will be invited to publish their learnings on refactoring and mobbing in real time on a twitter feed. Presenters will facilitate the workshop and offer guidance, followed by a retrospective.<br>;"Danijel Arsenovski; Steve Bement";B111
7702;"Panel ""Agile Development in a Mission Critical World""";5/22/2018 2:00 PM;5/22/2018 3:30 PM;Panel;;"<strong>Panel Impressario</strong>: Steven Fraser, Innoxec, USA<br><br><strong>Panelists</strong>:<br><em>• Kent Beck, Three Rivers Consulting<br>• Crista Lopes, University California, Irvine<br>• Yang Wang, Universität Stuttgart, Institut für Softwaretechnologie<br>• Laurie Williams, North Carolina State University (NCSU)<br><br></em>The software community has experienced the benefits and challenges of agile development for more than 20 years. While initially limited to non-mission critical projects developed by small co-located teams for readily accessible business partners (customers) - agile practices have increasingly been applied to mission critical systems. This panel brings together both academic and industry practitioners to discuss future directions and both the benefits and risks of agile approaches.<br><br><strong>Steven Fraser</strong> advises on agile practices, innovation, tech transfer, and strategic planning for Innoxec. He has held senior R&D leadership positions focused on scouting, incubating, and commercializing innovation through university partnerships for HP, Cisco, Qualcomm, Nortel, and Bell Northern Research. He developed team-based domain analysis techniques for Nortel as a Visiting Scientist at the Software Engineering Institute (SEI). Steven is a Senior Member of both the ACM and the IEEE and holds a PhD in Electrical Engineering in software specification validation from McGill University in Montreal.<br><br><strong>Kent Beck</strong> is the innovator of extreme programming, an agile software methodology which is based on collaborative and iterative design practices. Beck was one of the original signatories of the Agile Manifesto and pioneered software design patterns and the application of Smalltalk. Beck popularized CRC cards with Ward Cunningham, the inventor of the wiki.<br><br><strong>Cristina Videira Lopes</strong> is a Professor of Informatics at the University of California, Irvine. Her research focuses on software engineering for large-scale data and systems. She was a founding member of the Xerox PARC team that developed Aspect-Oriented Programming. She is also a prolific software developer in particular for OpenSimulator, a virtual world server. She is also a founder of Encitra, a company specializing in online virtual reality for early-stage sustainable urban redevelopment projects. She claims to be the only person in the world who is both an ACM Distinguished Scientist and Ohloh Kudos Rank 9.<br><br><strong>Yang Wang</strong> is a doctoral candidate completing her studies with the software engineering group at the University of Stuttgart, Germany. Her research interests focus on using scrum to develop safety-critical systems. Research to date has focused on using STPA and BDD in a Scrum development process framework for developing safety-critical systems. Additional interests include human factors, organization psychology and the dangers of groupthink.<br><br><strong>Laurie Williams</strong> is the Interim Department Head of Computer Science and a Professor in the Computer Science Department of the College of Engineering at North Carolina State University (NCSU). Laurie is a co-director of the NCSU Science of Security Lablet. Laurie's research focuses on software security particularly in relation to healthcare IT; agile software development practices and processes, particularly continuous deployment; and software reliability, software testing and analysis. Laurie Williams is one of the foremost researchers in agile software development and in the security of healthcare IT applications. She was one of the founders of the first XP/Agile conference, XP Universe, in 2001 in Raleigh which has now grown into the Agile 200x annual conference. She was also the lead author of the book Pair Programming Illuminated and a co-editor of Extreme Programming Perspectives.";"Yang Wang; Laurie Williams; Cristina Videira Lopes; Kent Beck";B001
7703;"Panel ""Agile Perspectives on what makes IoT Systems Different""";5/23/2018 4:00 PM;5/23/2018 5:00 PM;Panel;;"<strong>Panel Impressario:</strong> Steven Fraser, Innoxec<br><br>The IoT - the Internet of Things is the network of devices embedded in everyday objects ranging from individual consumer appliances (e.g. refrigerators, televisions, etc.) to a multitude of enterprise applications (e.g. supply chain management, security, environmental control, health systems). &nbsp;According to industry experts, through IoT platforms powered by software - the world will benefit from new dimensions of product enhancements, increased levels of engagement, and optimized supply chains.<br><br>Challenges are many and include - a lack of standardization, issues related to safety, reliability, security, support, and network resilience - plus policy issues related to regulation, privacy and trust. &nbsp;This panel will bring together XP2018 participants to discuss their perspectives on designing, developing, and maintaining software that powers the Internet of Things.<br><br>";;B001
7704;"Panel ""Education and Adoption of Agile Practices: Successes and Opportunities""";5/24/2018 2:00 PM;5/24/2018 3:30 PM;Panel;;"<strong>Panel Impressario</strong>: &nbsp;Steven Fraser, Innoxec, USA<br><br><strong>Panelists:&nbsp;</strong><ul><li>Ademar Aguiar, University of Porto</li><li>Dennis Mancl, Independent Consultant, USA</li><li>Rebecca J. Wirfs-Brock , Wirfs-Brock Associates</li></ul><br>Agile has a high brand recognition in the software industry, however it isn’t always successfully adopted or positively perceived. &nbsp;In some cases, the labels used to explain and promote agile practices can become obstacles to success. This panel brings together industry and academic perspectives on how agile is taught, mentored, and propagated as an integrated set of practices - sharing cautionary tales and suggesting avenues for increased effectiveness.<strong><br></strong><br><strong>Ademar Aguiar</strong> is a Professor at Faculty of Engineering of University of Porto (FEUP) and a researcher at INESC Porto. Ademar has over more than 20 years of experience in software development, software architecture and design (patterns, frameworks, infrastructures), agile methods, wikis, and open collaboration tools. Current research interests include knowledge management practices and tools for software development teams and organizations (from code to documentation) using wiki-based philosophy and open collaboration tools. Beyond the field of software engineering, Ademar is also exploring and applying social software to other audiences and fields, such as social learning environments for schools and their communities (PLE/SLE), and social impact ventures.<br><br><strong>Dennis Mancl</strong> is an independent consultant and educator in the field of software engineering and software development practices. Until recently, he was a Member of Technical Staff at Alcatel-Lucent in Murray Hill, New Jersey, where he worked on software tools and processes to support quality and productivity in the telecom industry. He has worked with technologies from C++ to UML to use cases to agile development in his years as an internal software process consultant for AT&T, Lucent, and Alcatel-Lucent.<br><br><strong>Rebecca J. Wirfs-Brock</strong> is a consultant and the inventor of Responsibility-Driven Design (RDD), the first behavioral approach to object design. She worked at Tektronix and Digitalk which later merged with Parc Place Systems to become ParcPlace-Digitalk. Wirfs-Brock first coined the ""-driven"" meme in an OOPSLA 1989 paper she co-authored with Brian Wilkerson. Before that time, the most prevalent way of structuring objects was based on entity-relationship modeling ideas (popularized by James Rumbaugh, Steve Mellor and Sally Shlaer). She wrote about object role stereotypes in 1992 in a SmalltalkReport article and this influenced the UML notion of stereotypes. Her invention of the conversational (two-column) form of use cases was then popularized by Larry Constantine. Most of the more recent ""driven"" design approaches acknowledge their roots and the influence of RDD, of which class-responsibility-collaboration cards are one popular technique.<br>";"Rebecca Wirfs-Brock; Ademar Aguiar; Dennis Mancl";B001
7705;"Invited Talk ""Let’s make the Long Tail of IoT - XP-style!"" by Erik Lundh";5/23/2018 11:00 AM;5/23/2018 12:00 PM;Practice;;"<em>In this talk, Erik will observe the parallels between the emergence of XP and the current landscape of IoT development. &nbsp;He will review the value chain for IoT development from device to cloud an comment on some of the unexpected challenges - suggesting how we can mitigate, XP style. <br />Sensitive viewers are warned that commercial examples of working IoT systems might be displayed.<br /><br /></em>There are huge expectations all over the world of a near-future zero-friction digital society running on cloud services and IoT devices, the Internet of Things.<br /><br />The winning concepts, the blockbusters, are easy to see in a rear-view mirror, but hard to aim for, which currently frustrates entire industries (such as telco operators), investors and the stock market. <br /><br />Enter the Long Tail, as experienced on Amazon.com, where hundreds of thousands of small teams make and sell niche products to millions of people who desire something a bit more bespoke or special. Amazon recently profited more (51% Q4, 2017) from the Long Tail than from anything else. Agile and open source democratized software: many small teams make software for a multiverse of applications for the many. &nbsp;IoT devices not so much.<br> The IoT challenge of building a smart, manufacturable device at the right price point is about more than just effective software. Most competing chips-and-sensors vendors offer some golden nuggets, but most try to build their own full verticals and entire eco-systems. The result is that no vendor has the traction needed to make IoT really easy. Recent attempts at just parachuting major tools and methods, from the industry of agile, has not helped.<br> IoT today looks like software and the web from 20 years ago, when many competing vendors tried to build locked-in kingdoms, of proprietary business models of tools and methods. A few became large, but not large enough. The big three (&ldquo;The Three Amigos&rdquo;) then joined forces to achieve critical business mass in a Unified Method. At its peak RUP consisted of 12 thousand documents, a plethora of potentially useful things, or golden nuggets from many places. To fully utilize RUP, each customer had to make thousands of decisions on what to use, not just once per organization, but for every project. A insurmountable effort, before you could start to make software and produce value.<br> Extreme Programming, XP, was a disruptive force 20 years ago. XP was just a few ideas and principles, some practices - proven by respected people, and three promising non-proprietary technologies (Refactoring, TDD, CI/CD). The XP promise was &lsquo;Just do these things and you can deliver working software every two weeks&rsquo;<br> &nbsp;IoT needs an XP-spirited approach, a similar highly constrained, cross-disciplinary team approach to rapid, iterative development of smart manufacturable inter-connected devices.<br> <strong>Let&rsquo;s go and make great stuff - in the Long Tail of IoT - XP-style.</strong><br> <br />";Erik Lundh;B001
7706;Cucumbers with Raspberries;5/21/2018 9:00 AM;5/21/2018 12:30 PM;Workshop;;Cucumber can be used to test just about anything.<br>Today. we're going to show you how to use Cucumber to test-drive an internet radio running on a Raspberry PI. It's going to be fun. And maybe a bit noisy!<br>Along the way, you'll learn techniques for isolating your tests from external dependencies.<br>At work, you probably struggle with tests that call out to other teams' APIs, or hit slow-running databases, or run behind awkward-to-automate user interfaces. Today, you'll be confronted with physical button that's impossible to automate (unless you built a robot!) so what are you going to do?<br>;"Matt Wynne; Steve Tooke";B113
7707;10 to 10,000: What changes at scale;5/25/2018 4:00 PM;5/25/2018 5:00 PM;Workshop;;So you know how 'Spotify does it', or know methodologies like 'SAFe', but are interested in realities?<br>Or maybe, you're at a start-up, wondering how to help enterprises become more agile? <br>Or you've spent time coaching at a large corporate, and are considering a move to start-up land?<br>This session is geared to compare and contrast the techniques, approaches and 'gotchas' when coaching different scales of organisation. We'll start with a few case studies from our own experiences, then follow with an exploration of the collective experiences in the room. We will all walk out with a broader perspective on what to consider when driving lean and agile principles into different scales of organisation.<br>;"John d'Agostino; Taufiq Khan";B111
7708;Continuous Delivery and Machine Learning;5/24/2018 2:00 PM;5/24/2018 3:00 PM;Practice;;Business value generated by machine learning algorithms is often overwhelmed by the discovery / deployment process. The nature of how machine learning models are created and deployed exacerbates costs and risks. Models, like software do not produce any revenue until they are in the hands of customers.<br>Typically, there are two distinct phases in releasing machine learning products: model discovery and creating a deployable model. The former is usually performed by a science team whose outputs are in the form of equations and model performance. Software engineering usually performs the latter. Each phase may take many months both with very high risks of completion.Having two groups involved in model creation complicates the integration phase.<br>Additionally, the process of model development is often described as a process of discovery because there is no correct answer. Each model is evaluated by how much information its execution brings to the problem space. This information is called lift. For example, if a model is designed to predict the category of an item, the amount of lift would be the the percent of times the prediction is correct when compared to a random guess. Model designers aim to maximize lift by using a near infinite number of techniques. The process is iterative. Unfortunately, these iterations are difficult to reconcile with traditional software development languages and processes.<br>This presentation details the challenges of using continuous deliver to deliver machine learning projects along with techniques for addressing the stickiest problems.<br>;"Carmine Mangione-Tran; Frank Elliott";B003
7709;Doctoral Symposium;5/21/2018 9:00 AM;5/21/2018 5:30 PM;Workshop;;"Agile software development is a mainstream approach in software engineering. Therefore, software engineering research is and should be involved in understanding and improving agile practices. We can now look back at an impressive amount of work on agile software development, empirical and methodological. Yet, there are still many open questions out there and agile software development has not stood still. Newer practices and approaches need to investigated scientifically. Yet, choosing the right research methods and strategies can be a difficult endeavor.<br><br>This doctoral symposium should be a help to PhD students who already or plan to conduct research in the wider area of agile software development. Experienced researchers from the board of advisors will review the research plans from PhD students and give them detailed feedback and guidance. The most promising research plans were invited to be presented at the symposium where the students can get more direct feedback in the discussion. Furthermore, we will have an interactive session at the doctoral symposium with all present PhD students and advisors to work on their abilities to develop research plans.<br><br><strong>Program</strong><br><ul><li>""What influences software startups to use Lean Startup?"" by Jorge Melegati</li><li>""Scaling Agile Software Development to Large Organizations"" by Abheeshta Putta, Maria Paasivaara and Casper Lassenius</li><li>""Theory of Altruism on Software Development Practices Patterns"" by Herez Kattan and Flavio Soares</li><li>""Experiential Team Learning in Software Startups"" by Dron Khanna</li><li>""Evaluation of the Proposed Auditing Model which Minimize the Gaps between Agile-XP and HIPAA Regulation Requirements within the NHS in England"" by Mahmood Alsaadi</li></ul><br><strong>Join us!</strong><br>Participation in the symposium is at three levels: <em>participants</em> present their research projects, <em>apprentices</em> attend to learn how to refine their projects, and <em>observers&nbsp;</em>are anyone interested on the topics and getting involved.<br><br><br>";"Herez Moise Kattan; Jorge Melegati; Abheeshta Putta; Dron Khanna";B111
7710;Agile in Education and Training;5/25/2018 9:00 AM;5/25/2018 5:30 PM;Workshop;;"<strong>How to Teach Agile to Anyone and Have Fun Doing It (Kristine Berry)<br><br>Training young agile minds - first-hand experiences (Giuseppe De Simone)</strong><br>Every agile trainer and coach knows that people find it difficult to pick up the agile principles. This is because adults have many assumptions about work that have to be unlearned before they can take in new paradigms. By working in non-agile environments and cultures, we start taking things for granted and form mental models of mutually reinforcing components. Neuroscience tells us that it is basically impossible to break these models.<br>What would it look like instead if you could educate people who have no preconceptions? And what if we create a more “agile friendly” brain wiring from the beginning, starting with school kids? How would they react? Does agile thinking resonate better with their mental models of the world? And what do they think about this all?<br>In this talk I will present an experience of using Scrum to create a learning environment for primary school kids in Italy which encompassed the following:<br>- Being more adaptable to a kid’s specific learning needs- Being a meaningful experience involving feelings and physical emotions- Fostering self-development and co-education- Training skills which are crucial in the 21st century but schools and companies are not good at teaching<br>I will report a first-hand validation that using Scrum and teaching agile practices and principles in a primary school class is doable, that kids positively enjoy it, that they can learn skills they normally don’t in a traditional classroom environment but which are essential in modern organizations (e.g. self-organization, leadership, ability to replan, imagination, self-reflection, dealing with uncertainty and the unknown). And most surprisingly, that their parents like it too.<br><br><strong>Program</strong><br><br>09:00 Session 1 <strong>Teaching methods (I)</strong><ul><li>Welcome and Introductions - Rob and Craig</li><li>Training Young Agile Minds - Giuseppe di Simone (25 mins)</li><li>Agile for Student Success - Semen Arslan (25 mins)</li><li>How to Teach Agile to Anyone and Have Fun Doing it - Kristine Berry (25mins)</li></ul><br>11: 00 Session 2 &nbsp;<strong>Project based learning</strong><ul><li>Making a Year-Long Software Engineering Project Agile - Sterling and Lopez-Lorca (25 mins)</li><li>Assessing Agile - How do we promote agile working whilst recognising individual performance? - Carl Jones et al (25 mins)</li><li>+ Discussion - Carl and Wendy to lead the discussion session</li></ul><br>14:00 Session 3 <strong>Building competence in industry</strong><ul><li>Thriving (Not Merely Surviving) the First Year: Redesigning the Onboarding Experience for Capability - Matthew Phillip (25 mins)</li><li>Build a ""Development for Non-Developers"" Course - Ivan Sanchez (25 mins)</li><li>+ Discussion - Matthew and Ivan to lead the discussion</li></ul><br>16:00 Session 4 <strong>Teaching methods (II)</strong><ul><li>Using the Scrum and visual tools for teaching purposes - Gema Gutierrez Peña (25mins)</li><li>New Approaches Teaching Agile Principles and Values in an Undergraduate Setting - Marla Landolt and Martin Kropp (25mins)</li><li>+ Discussion - Martin to lead the discussion</li></ul><br>";"Matthew Philip; Kristine Berry; Giuseppe De Simone; Semen Arslan; Ivan Sanchez; Carl Jones";B217
7711;The remote mobbing experience;5/25/2018 1:30 PM;5/25/2018 3:30 PM;Workshop;;Experience the joy of remote mobbing. We provide the backlog, you get to work in small groups in a simulated remote environment on a completely non-technical problem that has many similarities with the kinds of work we all do every day.<br>Hear edited highlights from the Cucumber journey with remote mobbing. Cucumber Ltd are a dispersed team who have been working on their products together using remote mob programming since October 2015. We have run many experiments along the way - some more successful than others - and used these to inform the ways we mob today.<br>This workshop will give you the opportunity to try remote-mobbing out for yourself in a way similar to the current Cucumber approach. You will then get a chance to retrospect on the experience, decide on changes to try or experiments to run, and have another iteration with these in place.<br>Finally, we will re-group as a whole team and share our learnings and insights.<br>Please bring a laptop and headphones!<br>;"Sallyann Freudenberg; Steve Tooke";B105
7712;Sub Second Full Stack Acceptance Tests;5/25/2018 9:00 AM;5/25/2018 12:30 PM;Workshop;;"Conventional wisdom tells us that full-stack acceptance tests are slow. We have discovered a way to make them blazing fast while still giving you full confidence. Imagine running more than 10 full-stack tests per second for your React, Vue, Angular (or other) JavaScript application, integrated with a Java back-end. How would that change the way you work? What would it do for your productivity?<br>In this workshop we'll take a close look at what makes acceptance tests slow and explore ways to make them fast. You will work with a React application and a Java back-end and experience how amazing life is when you don't reach your ""I'm going to look at twitter"" threshold every time you run your tests.<br>Some of the ideas and techniques we will present in the workshop come from the approach we have taken to building our test infrastructure in our current project. Extreme Programming originated because Kent Beck decided to ""turn all the knobs to ten"". For this XP conference we wanted to turn the knobs on these ideas all the way up and explore, together with the attendees, what will happen.<br>";"Aslak Hellesøy; Steve Tooke";B105
7713;Check-in;5/24/2018 8:00 AM;5/24/2018 8:30 AM;Registration;;;;#XP-PX 
7714;Café & Pastel de Nata;5/22/2018 8:30 AM;5/22/2018 9:00 AM;Social;;;;#XP-PX 
7715;Evening News;5/24/2018 6:00 PM;5/24/2018 6:30 PM;Open Space;;;;XPSpaces
7716;Welcome!;5/21/2018 6:00 PM;5/21/2018 7:00 PM;Social;;;;#XP-PX 
7717;Check-in;5/25/2018 8:00 AM;5/25/2018 8:30 AM;Registration;;;;#XP-PX 
7718;Check-in;5/23/2018 8:00 AM;5/23/2018 8:30 AM;Registration;;;;#XP-PX 
7719;Check-in;5/21/2018 8:00 AM;5/21/2018 8:30 AM;Registration;;Check-in for XP 2018 at Front Desk.;;#XP-PX 
7720;Check-in;5/22/2018 8:00 AM;5/22/2018 8:30 AM;Registration;;;;#XP-PX 
7721;Café & Pastel de Nata;5/23/2018 8:30 AM;5/23/2018 9:00 AM;Social;;;;#XP-PX 
7722;Café & Pastel de Nata;5/25/2018 8:30 AM;5/25/2018 9:00 AM;Social;;;;#XP-PX 
7723;Café & Pastel de Nata;5/24/2018 8:30 AM;5/24/2018 9:00 AM;Social;;;;#XP-PX 
7724;Café & Pastel de Nata;5/21/2018 8:30 AM;5/21/2018 9:00 AM;Social;;;;#XP-PX 
7726;Evening News;5/22/2018 6:00 PM;5/22/2018 6:30 PM;Open Space;;;;XPSpaces
7727;Evening News;5/23/2018 6:00 PM;5/23/2018 6:30 PM;Open Space;;;;XPSpaces
7730;Sunset Wine Reception;5/22/2018 7:00 PM;5/22/2018 9:30 PM;Social;;"Sunset Wine (and Dining) Reception will welcome you to XP 2018 and Porto to give you a first glimpse over the city, with a panoramic view, by the Douro river, at sunset.<br>The reception itself will take place at ""The Yeatman"", a luxury wine hotel and spa in Porto with spectacular views over the UNESCO World Heritage city and the Douro River.<br>https://www.the-yeatman-hotel.com/en/<br><br>We will start with a visit to the Port Wine cellars.";;#XP-PX 
7731;Banquet;5/23/2018 7:30 PM;5/23/2018 11:30 PM;Social;;"The Banquet Dinner will take place at seaside, and will give you a different perspective of Porto and its relationship with the sea.<br>It will be held at the Porto Cruise Terminal (South Cruise Terminal), which has received the biggest and the most glamorous cruise ships from the worldwide cruise fleet, boosting the cruise tourism in the North of Portugal region.<br>Besides that, the main building also comprises the Science and Technology Park of the Sea of the University of Porto, which includes the Maritime Research Centre in the New Cruise Terminal Building (occupying the basement ground, 2nd and 3th floor). This Park of Science and Technology focused in the Resources of the Sea managed by the University of Porto and is integrated in a recognized Strategy for Collective Efficiency, with the Ocean XXI Association for Research and Maritime Economy and the Cluster of the Creative Industries of the Northern Region.<br>https://www.apdl.pt/en_US/terminal-passageiros-sul&nbsp;";;#XP-PX 
7732;Porto Walk & Talk;5/24/2018 6:30 PM;5/24/2018 8:00 PM;Social;;Porto Walk & Talk will be the closing social event and will invite you to walk and talk about agile and Porto, while visiting some of its historical streets and places, meeting locals and their agile challenges. It will be a unique event!<br><br>;;#XP-PX 
7733;Self-Organized Party;5/24/2018 10:30 PM;5/24/2018 11:59 PM;Social;;;;#XP-PX 
7734;Bora dar uma bolta!;5/25/2018 7:00 PM;5/25/2018 8:00 PM;Social;;;;#XP-PX 
7747;Open Space Night;5/22/2018 9:30 PM;5/22/2018 11:30 PM;Open Space;;"After, or during, the reception, it will happen also the Open Space Night. <br>""Whatever happens is the only thing that could have"".<br>";;#XP-PX 
7748;Porto by Bus;5/22/2018 6:30 PM;5/22/2018 7:00 PM;Social;;;;#XP-PX 
7749;Porto by Bus;5/23/2018 6:30 PM;5/23/2018 7:30 PM;Social;;;;#XP-PX 
7750;Self-Organized Dinner;5/24/2018 8:00 PM;5/24/2018 10:30 PM;Social;;After the walk, we will self-organize to have dinner downtown to taste several current gastronomic attractions of Porto.<br>;;#XP-PX 
7751;Agile Portugal 2018;5/25/2018 9:00 AM;5/25/2018 7:00 PM;Co-located events;;"Agile Portugal is the premier international conference in Portugal about agile software development and its practices, technologies, attitudes and experiences. Created with both experts and beginners in mind, Agile Portugal is the place where the Portuguese agile community comes together to exchange and share their experiences about agile development approaches.<br><br>The 9th edition of Agile Portugal 2018 will be held in the beautiful city of Porto, Portugal, on the 25th of May, 2018. This year, Agile Portugal 2018 will be co-located with <a href=""https://xp2018.org/"">XP 2018</a>, one of the most recognized Agile conferences. Also, we will be counting with the valuable support of the <a href=""https://www.meetup.com/DevOps-Lisbon/"">DevOps Lisbon</a> and <a href=""https://www.meetup.com/devopsporto/"">DevOps Porto</a> communities.<br><br>If interested, register at https://2018.agilept.org.<br><br>";;Auditorium
7752;The Surprisingly Inclusive Benefits of Remote Mob Programming;5/24/2018 12:00 PM;5/24/2018 12:30 PM;Practice;;"When Sallyann, <a href=""https://salfreudenberg.wordpress.com/2017/07/10/diagnosis-day/"">recently diagnosed with autism</a>, joined the team at Cucumber for a day as part of her programming tour, she was <a href=""https://salfreudenberg.wordpress.com/2017/07/10/diagnosis-day/"">really nervous</a>.<br>She was not only picking up programming again after a ten year break, but this team was full of super-experienced practitioners, most of them book authors or prodigious open-source contributors. Not only that, but they did mob programming. Not only that, but they did it remotely!<br>This is the story of how Sal's experience on that first mobbing session ended with her completely changing her view on remote teams.<br>First we will cover Sal's outside impressions of us, and our own impressions of ourselves from the inside.<br>Then we will discuss how Sal was introduced into the team, what worked and what didn't work, and what we learned and adjusted to make things work better for everyone.<br>Then we'll describe the benefits each of us have experienced from this way of collaborating. We'll also describe some of the puzzles we still have, and the tensions and trade-offs that exist between working like this and being co-located.<br>";"Sallyann Freudenberg; Matt Wynne";B217
7753;Multi-Product Teams in an Agency: Combining Design Thinking, Lean and Agile.;5/22/2018 5:00 PM;5/22/2018 5:30 PM;Practice;;In The Pocket is a digital product studio, creating products on requests of clients. At first we had a small team and the products had limited budgets. Gradually, our team grew and the products became more business critical. Today we have six teams each creating multiple products. To build products that make users happy and businesses grow, our process evolved to a combination of design thinking, lean and agile. As these theories are often described from a product team perspective, this gives rise to challenges in our case. Furthermore, budget control is often neglected. We overcome these challenges by forming teams with a technology focus, expanding some agile roles, keeping sprint meetings relevant and introducing regular budget control. This results in teams enabled to build and grow multiple products, within the agreed budget. This experience report focuses on the applied process and how the above challenges are dealt with.<br>;Tom Van Helleputte;B001
7754;Robotic Process Engineering and Agile Within a Business Domain;5/24/2018 5:30 PM;5/24/2018 6:00 PM;Practice;;I’m not an experienced Agile professional. I would, however, still like to share with you our foray into Robotic Process Automation (RPA) & how we used Agile to deliver an RPA Pilot. I will explain why Agile was a great approach for exploring the potential benefits of a relatively new technology like RPA, and how it changed our cultural perceptions about tool selection, delivery, and business engagement.<br>This presentation and white paper will cover:<br><ul><li>Basic introduction to the project</li><li>An introduction and definition of Robotics Process Automation (RPA)</li><li>The approach we used</li><li>Our guiding principles</li><li>Setting the foundation</li><li>Stepping through our iterations/sprints</li><li>Closure, acceptance and program planning</li><li>Learnings</li></ul>;Cindy Tempel;B217
7755;Individuals and Interactions Over Processes and Tools, Can Agile Be Disrupted by AI?;5/22/2018 3:00 PM;5/22/2018 3:30 PM;Practice;;"Applying Agile is a mindset change rather than a process change compared to traditional methods. Some of the typical challenges faced by teams in the Industry while practicing Agile are:<br><br>• Limited experience with agile<br>• Slowing down of work due to limited access to Product Owner<br>• Incomplete\less detailed user stories leading to high onshore dependency<br>• Struggle to keep momentum with continuous churn of agile events through active participation and to maintain quality of artefacts (backlog, burndown, impediment list, retrospective action log)<br><br>These challenges manifold when delivery teams within the Industry are practicing distributed agile at scale. In the last couple of years within the IT industry we are seeing the infusion of Artificial Intelligence (AI). The question which come up is, Can AI help to address some of the above challenges ? <br>At Accenture, we have introduced virtual Scrum Master that resides in our intelligent automation platform, Accenture myWizard®; The virtual Scrum Master uses machine learning to collaborate with their human co-workers to help address the above mentioned challenges. It monitors numerous aspects of Agile development projects—consisting of requirements, releases, metrics and resources—alerting the team of any potential issues and providing possible solutions also the virtual Scrum Master helps the Agile teams.<br>";"Jeffson Dsouza; Raghavendra Meharwade";B217
7756;What We've Learned Building Non-It Scrum Teams;5/22/2018 3:00 PM;5/22/2018 3:30 PM;Practice;;What will happen if we try to run the whole company using Scrum Teams? What is the difference between IT and non-IT teams?<br>Join us to hear our stories of using Scrum for Sales, Support, Account Management and Hardware Development teams. We will share problems we've encountered and experiments we'd run. With our lesson learned you'll know what to expect when helping non-it teams in your organization.<br>;"Tomasz Wykowski; Justyna Wykowska";B002
7757;What SAFe Doesn't Tell You. An Experience Report 2 Years Into an Enterprise SAFe Rollout;5/24/2018 12:00 PM;5/24/2018 12:30 PM;Practice;;I work for a Danish financial software company called SimCorp. We are about 1200 people worldwide with about 500 in the development organisation spread across 4 locations, Copenhagen, London, Kiev & Bad Homburg in Germany.<br>About 2 years ago a decision was made by our CTO to 'go agile' and SAFe was chosen as the vehicle we would use. Many organisations are now choosing SAFe as a starting point for large scale organisational change, and whilst SAFe is broad framework that offers answers for much of what you will run into, there is also a lot it does not say or does not have an opinion on.<br>We now have approx 55 teams who have adopted agile ways of working, across 8 release trains, spanning all 4 locations. In addition to this we are now engaging with HR and other areas of the business such as customer implementation consultants who are keen to see what its all about.<br>This session will cover some of the most important stuff we have learned 2 years on from adopting SAFe, and give you some ideas of how to address these problems should you run into them.;"Piet Syhler; Neil Cook; Frank Olsen";B003
7758;Planning and Executing Fixed Bid Projects Using Agile;5/22/2018 5:30 PM;5/22/2018 6:00 PM;Practice;;As an employee of ThoughtWorks, I lead large (sometimes globally distributed) teams of consultants building application software for our clients using agile, lean and XP methodologies.<br>Since the financial crisis of 2008, several clients have requested us to build software on fixed bid contracts. Normally we don't pick up this kind of work because a fixed bid contract goes against the agile principles of customer collaboration and responding to change, and doesn't result in the best solution for the client.<br><br>In the spring of 2016, one of our long term clients approached us to deliver a portal for use by customers and call center agents for their new consumer loan product. Since they were in a really bad situation, we decided to take on the work.<br><br>I was given a lot of freedom in the planning and execution of this project and doing things differently from how we kickoff and execute projects. I had to fundamentally rethink some of the things I have always assumed in regular time and material projects. As part of this experience report, I would like to share the things I did differently that helped make this not only a very enjoyable experience for the clients and the development team, but also led to us coming in earlier that the planned end date and with more features than originally planned.<br>;Vijay Iyer;B217
7759;First Being, Then Doing. Feeling the Freedom Through Agileness;5/23/2018 5:30 PM;5/23/2018 6:00 PM;Practice;;While Lean Startup and Lean Thinking provide principles and practices to follow, practically still companies are struggling in adopting Agile and Lean Startup principles in practical scenarios, even when the benefits are well proved. With this report we aim to share our experience on how we are embracing the <em>lean</em> in our working environment, a software startup. In our story the main protagonist is the mindset. Although in our transformation process several practices have taken place, the application itself was neither radical nor by the book. The main reason for this has been a <em>lean</em> mentality that was already implicitly shared by the team long before the practices became operative. With our case we want to discuss the <em>Agileness</em> itself, providing an example of a company being Agile without doing Agile.<br>;"Marco Mondini; Francesco Vettoretti";B002
7760;DevOps as an Enabler for More Efficient Testing in Large-Scale Agile Projects;5/22/2018 5:00 PM;5/22/2018 5:30 PM;Practice;;Agile development methods have become the standard in most large IT development projects, DevOps is on the way. Delivering new functionality to end-users every sprint is still a major goal for most large-scale agile development projects, and the benefits of shift-left testing, continuous integration and DevOps-thinking makes the testing more efficient and comprehensive each sprint. This enables the development teams to deliver working software ready for system integration testing earlier than before. However, it also challenges the teams to re-think their testing process as the introduction of DevOps puts even more focus on “doing the right testing at the right time”, having the right skills and collaboration. This report describes how a large-scale agile project with 5 development teams benefited from DevOps, improving and streamlining their testing process. The report also provides recommendations on how to organize development and test work in present and future large-scale DevOps/agile development projects.<br>;Kristian Bjerke-Gulstuen;B003
7761;The Power of Agile;5/24/2018 5:00 PM;5/24/2018 5:30 PM;Practice;;Agile is everywhere, in our lives, in our work, in our relationships…<br><br>My Agile journey began many years ago. After working on numerous Agile initiatives I decided to pursue the Agile Certified Practitioner (PMI-ACP) designation through the Project Management Institute. Once I obtained my PMI-ACP I immersed myself more deeply into using Agile practices and techniques wherever and whenever i could.<br><br>I started thinking if the ultimate goal of Agile is to “produce value in a new and innovative way” then is there an opportunity to leverage Agile principles and values so that i can create more value in my life and make my life more meaningful?<br><br>The answer is YES!<br>;Fahd Gulzar;B002
7762;Combining Roles: Scrum Master as a Team Member;5/22/2018 5:30 PM;5/22/2018 6:00 PM;Practice;;Wouldn't it be great if everyone on an Agile team had dedicated roles and didn't have to switch hats?<br>In an ideal world where resource availability, speciality skills, and economics are not an issue that makes perfect sense.<br>Tom Hanks character (Chesley 'Sully' Sullenberger) in the movie Sully said it best, “Can we talk for real now?”.<br>The reality is, not all organizations have the luxury of a dedicated Scrum Master, Product Owner, and Team. Think of cash strapped start-ups that can barely afford office space. Having to pay multiple salaries would likely sink them before they’ve even gotten started.<br>But what if the Scrum Master could also function as a team member? Afterall, Agile does promote T-shaped skills.<br>Mark Rajpal will take you through his journey as a Scrum Master/Team Member leading a team with little to no Agile experience and knowledge. He will discuss the difficult decisions he faced and what really led his Agile team to hyper-productivity.<br>;Mark Rajpal;B002
7763;Continuous Delivery in IoT Environments;5/24/2018 3:00 PM;5/24/2018 3:30 PM;Practice;;For your web backend and frontend development, you probably have a continuous delivery process in place. But how about your mobile apps? Do you have a continuous delivery process in your mobile app development team? And what about the embedded firmware in your hardware products?<br><br>At Philips Hue, we build the worlds most popular smart home lighting system. The software in our products, and in most other IoT products, is a combination of embedded firmware, mobile apps, and web backend and frontend. The tools, practices, risks and timelines for software delivery between these software stacks are very different, but they all need to work together seamlessly.<br><br>In this report, we will share our experience and challenges in enabling continuous delivery practices at Philips Hue and other IoT products we worked on. We will share our experience in deploying firmware to customers' devices, releasing mobile apps and doing backend deployments, while ensuring everything works together seamlessly. We will share details on embedded firmware API versioning, release cadences, and build automation in a IoT environment. Furthermore, we will share our experience in end user acceptance testing for our products. The report ends with a list of recommendations for enabling continuous delivery for IoT product development.;Noud de Beijer;B003
7764;Don't Be Random! Tools for Structured Team Development;5/23/2018 11:00 AM;5/23/2018 12:00 PM;Practice;;The Coaching Card is a simple but powerful template for ScrumMasters, line managers and Agile Coaches who are interested in coaching their teams to become more mature. (If you're not interested in that, you're probably in the wrong job.)<br>The Coaching Card is both a thinking model and a template. It gives some backbone to the coaching work, helps people choose the right interventions and gives a degree of measurability to the work. It also lets several people collaborate around one team and helps junior coaches get mentoring and advice from more experienced coaches. It's one of those simple things that people don't know they are missing, but are so obvious in hindsight.<br>Coaching Cards are based on the OODA loop (inspect and adapt) and on Karl Tomm's coaching model. It very specifically uses observations, hypotheses, goals, metrics and interventions. The Coaching Card concept has been developed over the last 5-6 years by agile42, by doing it and helping others do it. It's our own solution to a common practical problem, and we've noticed that there are no other solutions to this problem out there.<br>;Martin von Weissenberg;B002
7765;Research Poster Madness;5/24/2018 11:00 AM;5/24/2018 12:00 PM;Research;;"XP 2018 features a ""Research Poster Madness"" session, an entertaining session, where authors can present their research posters in <strong>one minute</strong>, using <strong>two slides</strong>. Research Posters will be in the venue since the beginning of the conference days.<br><br><strong>Rules</strong><br>Authors have exactly two slides (in pdf format) to be shown for exactly one minute to support your quick talk. Authors talking longer will be stopped... sorry. :)<br><br>In between the one-minute talks a transition slide will be shown for approximately 15 seconds. This transition slide will be added by us and it will contain the title of the next one-minute talk. The transition slide will include the title and authors.<br><br>The challenge is to avoid trying to present technical details and provide the audience with a very high-level idea, ideally, presented in a catchy, entertaining manner.<br><br>Send your slides in advance to Research Poster co-chairs by 23 May, latest, latest, latest.<br>";;B003
